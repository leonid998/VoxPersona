# VoxPersona Docker Compose Configuration
# Optimized for build performance with BuildKit caching

services:
  voxpersona:
    build:
      context: .
      dockerfile: Dockerfile
      # Enable BuildKit for improved caching and build performance
      # Use cache mount for pip cache and model downloads
      cache_from:
        - voxpersona:latest
      target: final
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: voxpersona:latest
    container_name: voxpersona_app
    restart: on-failure:3
    deploy:
      resources:
        limits:
          memory: 10G
        reservations:
          memory: 2G
    environment:
      # Telegram API & Bot
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SESSION_BOT_NAME=${SESSION_BOT_NAME:-voxpersona_bot}
      # OpenAI & Anthropic
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_API_KEY_2=${ANTHROPIC_API_KEY_2:-}
      - ANTHROPIC_API_KEY_3=${ANTHROPIC_API_KEY_3:-}
      - ANTHROPIC_API_KEY_4=${ANTHROPIC_API_KEY_4:-}
      - ANTHROPIC_API_KEY_5=${ANTHROPIC_API_KEY_5:-}
      - ANTHROPIC_API_KEY_6=${ANTHROPIC_API_KEY_6:-}
      - ANTHROPIC_API_KEY_7=${ANTHROPIC_API_KEY_7:-}
      # Database
      - DB_NAME=${DB_NAME:-bot_db}
      - DB_USER=${DB_USER:-voxpersona_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      # Application specifics
      - PASSWORD=${PASSWORD}
      - TRANSCRIBATION_MODEL_NAME=${TRANSCRIBATION_MODEL_NAME:-whisper-1}
      - REPORT_MODEL_NAME=${REPORT_MODEL_NAME:-claude-sonnet-4-20250514}
      - RUN_MODE=${RUN_MODE:-PROD}
      # MinIO
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-}
      - MINIO_AUDIO_BUCKET_NAME=${MINIO_AUDIO_BUCKET_NAME:-voxpersona-audio}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-}
      - MINIO_USE_SSL=${MINIO_USE_SSL:-false}
      # MinIO Health Check Configuration
      - MINIO_HEALTH_CHECK_INTERVAL=${MINIO_HEALTH_CHECK_INTERVAL:-60}
      - MINIO_MAX_RETRIES=${MINIO_MAX_RETRIES:-3}
      - MINIO_RETRY_BACKOFF=${MINIO_RETRY_BACKOFF:-2.0}
      # Storage Configuration
      - MINIO_MAX_FILE_SIZE=${MINIO_MAX_FILE_SIZE:-2147483648}
      - MINIO_CLEANUP_DAYS=${MINIO_CLEANUP_DAYS:-30}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./rag_indices:/app/rag_indices
      # Cache volumes for development
      - pip_cache:/root/.cache/pip
      - huggingface_cache:/root/.cache/huggingface
    networks:
      - voxpersona_default
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: voxpersona_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_BROWSER_REDIRECT_URL: https://minio.localhost
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web Console
    volumes:
      - minio_data:/data
      - minio_certs:/certs
    command: server /data --console-address ":9001" --certs-dir /certs
    networks:
      - voxpersona_default
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    image: postgres:14
    container_name: voxpersona_postgres
    restart: on-failure:3
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Раскомментируйте следующую строку если у вас есть SQL файл для инициализации
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - voxpersona_default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-voxpersona_user} -d ${DB_NAME:-bot_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  voxpersona_default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  minio_certs:
    driver: local
  # Cache volumes for improved build performance
  pip_cache:
    driver: local
  huggingface_cache:
    driver: local
  logs:
    driver: local

# Build optimization settings for development
# Enable BuildKit by setting DOCKER_BUILDKIT=1 environment variable
# or add "features": { "buildkit": true } to Docker Desktop settings

# Performance monitoring comments:
# ТЕСТ ОПТИМИЗАЦИИ DOCKER - Build performance optimization applied
# МНОГОЭТАПНАЯ СБОРКА - Multi-stage build with improved layer caching
# АРХИТЕКТУРНАЯ ЧИСТОТА - Infrastructure rebuild for correct project structure (Oct 2025)
