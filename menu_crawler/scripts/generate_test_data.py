#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Menu Crawler
–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã –∏ –æ—Ç—á–µ—Ç—ã –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–µ–Ω—é
"""

import os
import sys
from pathlib import Path
from datetime import datetime
import json

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –ò src –≤ PYTHONPATH
project_root = Path(__file__).parent.parent.parent
src_path = project_root / "src"
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(src_path))

os.environ['ENV'] = 'production'

from conversation_manager import ConversationManager


def create_test_conversations(user_id: str, count: int = 3):
    """
    –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —á–∞—Ç—ã –¥–ª—è TEST_USER

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    """
    print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ {count} —Ç–µ—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è user_id: {user_id}...")

    manager = ConversationManager(user_id)

    test_chats = [
        {
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç 1 - –ò–Ω—Ç–µ—Ä–≤—å—é",
            "mode": "interview",
            "building_type": "hotel"
        },
        {
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç 2 - –î–∏–∑–∞–π–Ω",
            "mode": "design",
            "building_type": "restaurant"
        },
        {
            "name": "–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç 3 - –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º",
            "mode": "fast",
            "building_type": "hotel"
        }
    ]

    created_count = 0

    for i, chat_data in enumerate(test_chats[:count], 1):
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
            conv_id = manager.create_conversation(
                name=chat_data["name"],
                mode=chat_data.get("mode", "fast")
            )

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            metadata = {
                "building_type": chat_data.get("building_type", "hotel"),
                "created_by": "menu_crawler_test",
                "created_at": datetime.now().isoformat()
            }

            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç {i}/{count}: {chat_data['name']} (ID: {conv_id[:8]}...)")
            created_count += 1

        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞ {i}: {e}")

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —á–∞—Ç–æ–≤: {created_count}/{count}")
    return created_count


def create_test_reports(user_id: str, count: int = 2):
    """
    –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è TEST_USER

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    """
    print(f"üìÑ –°–æ–∑–¥–∞–Ω–∏–µ {count} —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è user_id: {user_id}...")

    # –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    reports_dir = project_root / "md_reports" / f"user_{user_id}"
    reports_dir.mkdir(parents=True, exist_ok=True)

    test_reports = [
        {
            "filename": "test_report_interview_1.md",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç - –ò–Ω—Ç–µ—Ä–≤—å—é",
            "content": """# –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –∏–Ω—Ç–µ—Ä–≤—å—é

## –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
{date}

## –û–ø–∏—Å–∞–Ω–∏–µ
–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Menu Crawler.

## –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
- –¢–∏–ø: –ò–Ω—Ç–µ—Ä–≤—å—é
- –°–æ–∑–¥–∞–Ω–æ: Menu Crawler Test
- –°—Ç–∞—Ç—É—Å: –¢–µ—Å—Ç–æ–≤—ã–π
"""
        },
        {
            "filename": "test_report_design_1.md",
            "title": "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç - –î–∏–∑–∞–π–Ω",
            "content": """# –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–∏–∑–∞–π–Ω-–∞—É–¥–∏—Ç–∞

## –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
{date}

## –û–ø–∏—Å–∞–Ω–∏–µ
–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –¥–∏–∑–∞–π–Ω-–∞—É–¥–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Menu Crawler.

## –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
- –¢–∏–ø: –î–∏–∑–∞–π–Ω-–∞—É–¥–∏—Ç
- –°–æ–∑–¥–∞–Ω–æ: Menu Crawler Test
- –°—Ç–∞—Ç—É—Å: –¢–µ—Å—Ç–æ–≤—ã–π
"""
        }
    ]

    created_count = 0

    for i, report_data in enumerate(test_reports[:count], 1):
        try:
            report_path = reports_dir / report_data["filename"]

            # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            content = report_data["content"].format(
                date=datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            )

            # –ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
            report_path.write_text(content, encoding='utf-8')

            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç {i}/{count}: {report_data['filename']}")
            created_count += 1

        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ {i}: {e}")

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: {created_count}/{count}")
    return created_count


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""

    TEST_USER_TELEGRAM_ID = 155894817

    print("=" * 60)
    print("üß™ –ì–ï–ù–ï–†–ê–¶–ò–Ø –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• –î–õ–Ø MENU CRAWLER")
    print("=" * 60)
    print()

    # User ID = telegram_id –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = str(TEST_USER_TELEGRAM_ID)

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤
        chats_created = create_test_conversations(user_id, count=3)
        print()

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
        reports_created = create_test_reports(user_id, count=2)
        print()

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("=" * 60)
        print("‚úÖ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
        print("=" * 60)
        print(f"üìù –¢–µ—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {chats_created}")
        print(f"üìÑ –¢–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {reports_created}")
        print()
        print("üéØ –û–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç:")
        print("   - –î–æ—Å—Ç—É–ø–Ω—ã dynamic –º–µ–Ω—é: chat_actions||{id}")
        print("   - –î–æ—Å—Ç—É–ø–Ω—ã –æ—Ç—á–µ—Ç—ã: report_view, report_rename, report_delete")
        print("   - Coverage –¥–æ–ª–∂–µ–Ω –≤—ã—Ä–∞—Å—Ç–∏ –Ω–∞ ~10-15%")
        print()

        return 0

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == '__main__':
    sys.exit(main())
