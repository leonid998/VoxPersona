#!/usr/bin/env python3
"""
–ü–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å menu_graph.json –¥–ª—è VoxPersona v3 (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
–ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö 81+ callback_data –∏–∑ COMPLETE_MENU_TREE.md
"""

import json
from pathlib import Path
from typing import Dict, List


class MenuGraphBuilder:
    """–ü–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å –≥—Ä–∞—Ñ–∞ –º–µ–Ω—é"""

    def __init__(self):
        self.nodes: Dict[str, dict] = {}
        self.edges: List[dict] = []

    def add_node(self, node_id: str, node_type: str, depth: int, description: str,
                 dynamic: bool = False, fsm: bool = False):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞"""
        self.nodes[node_id] = {
            "type": node_type,
            "depth": depth,
            "description": description
        }
        if dynamic:
            self.nodes[node_id]["dynamic"] = True
        if fsm:
            self.nodes[node_id]["fsm"] = True

    def add_edge(self, from_node: str, to_node: str, callback_data: str,
                 button_text: str, condition: str = None):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–∏"""
        edge = {
            "from": from_node,
            "to": to_node,
            "callback_data": callback_data,
            "button_text": button_text
        }
        if condition:
            edge["condition"] = condition
        self.edges.append(edge)

    def build_main_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        self.add_node("menu_main", "menu", 0, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

        # –î–æ—á–µ—Ä–Ω–∏–µ –º–µ–Ω—é (—É–∑–ª—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Ç–æ–¥–∞—Ö)
        self.add_edge("menu_main", "menu_chats", "menu_chats", "üì± –ß–∞—Ç—ã/–î–∏–∞–ª–æ–≥–∏")
        self.add_edge("menu_main", "menu_system", "menu_system", "‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞—è")
        self.add_edge("menu_main", "menu_help", "menu_help", "‚ùì –ü–æ–º–æ—â—å")

    def build_chats_menu(self):
        """–ú–µ–Ω—é —á–∞—Ç–æ–≤"""
        self.add_node("menu_chats", "menu", 1, "–ß–∞—Ç—ã/–î–∏–∞–ª–æ–≥–∏")

        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —á–∞—Ç—ã
        self.add_node("chat_actions", "action", 2, "–î–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç–æ–º", dynamic=True)
        self.add_edge("menu_chats", "chat_actions", "chat_actions||{conversation_id}",
                     "üìù [–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞]")

        # –ù–æ–≤—ã–π —á–∞—Ç
        self.add_node("new_chat", "action", 2, "–ù–æ–≤—ã–π —á–∞—Ç", fsm=True)
        self.add_edge("menu_chats", "new_chat", "new_chat", "üÜï –ù–æ–≤—ã–π —á–∞—Ç")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.add_node("show_stats", "view", 2, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–æ–≤")
        self.add_edge("menu_chats", "show_stats", "show_stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

        # –ú–æ–∏ –æ—Ç—á–µ—Ç—ã
        self.add_node("show_my_reports", "view", 2, "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã")
        self.add_edge("menu_chats", "show_my_reports", "show_my_reports", "üìÑ –ú–æ–∏ –æ—Ç—á–µ—Ç—ã")

        # –ù–∞–∑–∞–¥
        self.add_edge("menu_chats", "menu_main", "menu_main", "üîô –ù–∞–∑–∞–¥")

    def build_chat_actions(self):
        """–î–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç–æ–º"""
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        self.add_node("confirm_switch", "action", 3, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞")
        self.add_edge("chat_actions", "confirm_switch", "confirm_switch||{id}", "–í –ß–∞—Ç")

        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
        self.add_node("rename_chat", "action", 3, "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞", fsm=True)
        self.add_edge("chat_actions", "rename_chat", "rename_chat||{id}", "‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å")

        # –£–¥–∞–ª–µ–Ω–∏–µ
        self.add_node("delete_chat", "action", 3, "–£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞")
        self.add_edge("chat_actions", "delete_chat", "delete_chat||{id}", "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")

        self.add_node("confirm_delete", "action", 4, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞")
        self.add_edge("delete_chat", "confirm_delete", "confirm_delete||{id}", "üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å")

        # –ù–∞–∑–∞–¥
        self.add_edge("chat_actions", "menu_chats", "menu_chats", "üîô –ù–∞–∑–∞–¥")

    def build_my_reports(self):
        """–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"""
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã
        self.add_node("send_report", "action", 3, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", dynamic=True)
        self.add_edge("show_my_reports", "send_report", "send_report||{report_id}",
                     "üìÑ [–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞]")

        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
        self.add_node("show_all_reports", "view", 3, "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç—á–µ—Ç—ã")
        self.add_edge("show_my_reports", "show_all_reports", "show_all_reports",
                     "‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ")

        # –î–µ–π—Å—Ç–≤–∏—è —Å –æ—Ç—á–µ—Ç–æ–º
        self.add_node("report_view", "action", 4, "–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–∞")
        self.add_edge("send_report", "report_view", "report_view", "üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä")

        self.add_node("report_rename", "action", 4, "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞", fsm=True)
        self.add_edge("send_report", "report_rename", "report_rename", "‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å")

        self.add_node("report_delete", "action", 4, "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞")
        self.add_edge("send_report", "report_delete", "report_delete", "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å")

        self.add_node("report_delete_confirm", "action", 5, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞")
        self.add_edge("report_delete", "report_delete_confirm",
                     "report_delete_confirm||{num}", "üóëÔ∏è –î–∞")

        # –ù–∞–∑–∞–¥
        self.add_edge("show_my_reports", "menu_chats", "menu_chats", "üîô –ù–∞–∑–∞–¥")
        self.add_edge("send_report", "show_my_reports", "show_my_reports", "üîô –ù–∞–∑–∞–¥")

    def build_system_menu(self):
        """–°–∏—Å—Ç–µ–º–Ω–æ–µ –º–µ–Ω—é"""
        self.add_node("menu_system", "menu", 1, "–°–∏—Å—Ç–µ–º–Ω–∞—è")

        # –•—Ä–∞–Ω–∏–ª–∏—â–µ
        self.add_node("menu_storage", "menu", 2, "–•—Ä–∞–Ω–∏–ª–∏—â–µ")
        self.add_edge("menu_system", "menu_storage", "menu_storage", "üìÅ –•—Ä–∞–Ω–∏–ª–∏—â–µ")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ (super_admin only)
        self.add_node("menu_access", "menu", 2, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞")
        self.add_edge("menu_system", "menu_access", "menu_access",
                     "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞", "user_role == super_admin")

        # –ù–∞–∑–∞–¥
        self.add_edge("menu_system", "menu_main", "menu_main", "üîô –ù–∞–∑–∞–¥")

    def build_storage_menu(self):
        """–ú–µ–Ω—é —Ö—Ä–∞–Ω–∏–ª–∏—â–∞"""
        # –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã
        self.add_node("view||audio", "view", 3, "–ü—Ä–æ—Å–º–æ—Ç—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤")
        self.add_edge("menu_storage", "view||audio", "view||audio", "üìÅ –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã")

        self.add_node("select||audio", "action", 4, "–í—ã–±–æ—Ä –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞", dynamic=True)
        self.add_edge("view||audio", "select||audio", "select||{filename}", "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª")

        self.add_node("delete||audio", "action", 4, "–£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞", dynamic=True)
        self.add_edge("view||audio", "delete||audio", "delete||{filename}", "–£–¥–∞–ª–∏—Ç—å")

        self.add_node("upload||audio", "action", 4, "–ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞", fsm=True)
        self.add_edge("view||audio", "upload||audio", "upload||audio", "–ó–∞–≥—Ä—É–∑–∏—Ç—å")

        # –ù–∞–∑–∞–¥
        self.add_edge("menu_storage", "menu_system", "menu_system", "üîô –ù–∞–∑–∞–¥")

    def build_access_menu(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ (super_admin only)"""
        condition = "user_role == super_admin"

        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        self.add_node("access_users_menu", "menu", 3, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        self.add_edge("menu_access", "access_users_menu", "access_users_menu",
                     "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", condition)

        # –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        self.add_node("access_invitations_menu", "menu", 3, "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è")
        self.add_edge("menu_access", "access_invitations_menu", "access_invitations_menu",
                     "üé´ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", condition)

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        self.add_node("access_security_menu", "menu", 3, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        self.add_edge("menu_access", "access_security_menu", "access_security_menu",
                     "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", condition)

        # –ù–∞–∑–∞–¥
        self.add_edge("menu_access", "menu_system", "menu_system", "üîô –ù–∞–∑–∞–¥", condition)

    def build_access_users(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
        condition = "user_role == super_admin"

        # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.add_node("access_list_users", "view", 4, "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.add_edge("access_users_menu", "access_list_users", "access_list_users",
                     "üìä –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", condition)

        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        self.add_node("access_list_users||page", "view", 4, "–ü–∞–≥–∏–Ω–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞", dynamic=True)
        self.add_edge("access_list_users", "access_list_users||page",
                     "access_list_users||page||{n}", "‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è", condition)

        # –ü–æ–∏—Å–∫
        self.add_node("access_search_user", "action", 4, "–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", fsm=True)
        self.add_edge("access_list_users", "access_search_user", "access_search_user",
                     "üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", condition)

        # –§–∏–ª—å—Ç—Ä—ã
        self.add_node("access_filter_roles", "menu", 4, "–§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º")
        self.add_edge("access_list_users", "access_filter_roles", "access_filter_roles",
                     "üìä –§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º", condition)

        self.add_node("access_filter||all", "action", 5, "–§–∏–ª—å—Ç—Ä: –í—Å–µ")
        self.add_edge("access_filter_roles", "access_filter||all", "access_filter||all",
                     "–í—Å–µ", condition)

        self.add_node("access_filter||super_admin", "action", 5, "–§–∏–ª—å—Ç—Ä: super_admin")
        self.add_edge("access_filter_roles", "access_filter||super_admin",
                     "access_filter||super_admin", "super_admin", condition)

        self.add_node("access_filter||admin", "action", 5, "–§–∏–ª—å—Ç—Ä: admin")
        self.add_edge("access_filter_roles", "access_filter||admin",
                     "access_filter||admin", "admin", condition)

        self.add_node("access_filter||user", "action", 5, "–§–∏–ª—å—Ç—Ä: user")
        self.add_edge("access_filter_roles", "access_filter||user",
                     "access_filter||user", "user", condition)

        # –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ)
        self.add_node("access_user_details", "view", 5, "–î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", dynamic=True)
        self.add_edge("access_list_users", "access_user_details",
                     "access_user_details||{user_id}", "‚úÖ [Username]", condition)

        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        self.add_node("access_edit_user_select", "action", 4, "–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        self.add_edge("access_users_menu", "access_edit_user_select", "access_edit_user_select",
                     "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", condition)

        self.add_node("access_edit_user", "menu", 5, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", dynamic=True)
        self.add_edge("access_user_details", "access_edit_user", "access_edit_user||{user_id}",
                     "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", condition)

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏
        self.add_node("access_change_role", "menu", 6, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏")
        self.add_edge("access_edit_user", "access_change_role", "access_change_role||{user_id}",
                     "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", condition)

        self.add_node("access_set_role", "action", 7, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–ª–∏", dynamic=True)
        self.add_edge("access_change_role", "access_set_role",
                     "access_set_role||{user_id}||{role}", "[–†–æ–ª—å]", condition)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.add_node("access_change_settings", "menu", 6, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        self.add_edge("access_edit_user", "access_change_settings",
                     "access_change_settings||{user_id}", "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", condition)

        self.add_node("access_set_cleanup", "action", 7, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏", fsm=True)
        self.add_edge("access_change_settings", "access_set_cleanup",
                     "access_set_cleanup||{user_id}", "–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", condition)

        # –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
        self.add_node("access_reset_password", "action", 6, "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è")
        self.add_edge("access_edit_user", "access_reset_password",
                     "access_reset_password||{user_id}", "–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å", condition)

        self.add_node("access_confirm_reset", "action", 7, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è")
        self.add_edge("access_reset_password", "access_confirm_reset",
                     "access_confirm_reset||{user_id}", "‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", condition)

        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞
        self.add_node("access_block_user_select", "action", 4, "–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
        self.add_edge("access_users_menu", "access_block_user_select",
                     "access_block_user_select", "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", condition)

        self.add_node("access_toggle_block", "action", 5, "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞")
        self.add_edge("access_user_details", "access_toggle_block",
                     "access_toggle_block||{user_id}", "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", condition)

        self.add_node("access_confirm_block", "action", 6, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
        self.add_edge("access_toggle_block", "access_confirm_block",
                     "access_confirm_block||{user_id}", "‚úÖ –î–∞", condition)

        # –£–¥–∞–ª–µ–Ω–∏–µ
        self.add_node("access_delete_user_select", "action", 4, "–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        self.add_edge("access_users_menu", "access_delete_user_select",
                     "access_delete_user_select", "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", condition)

        self.add_node("access_delete_user_confirm", "action", 5, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è")
        self.add_edge("access_user_details", "access_delete_user_confirm",
                     "access_delete_user_confirm||{user_id}", "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", condition)

        self.add_node("access_confirm_delete", "action", 6, "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è")
        self.add_edge("access_delete_user_confirm", "access_confirm_delete",
                     "access_confirm_delete||{user_id}", "üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å", condition)

        # –ù–∞–∑–∞–¥
        self.add_edge("access_users_menu", "menu_access", "menu_access", "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_user_details", "access_list_users", "access_list_users",
                     "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_edit_user", "access_user_details",
                     "access_user_details||{user_id}", "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_filter_roles", "access_list_users", "access_list_users",
                     "üîô –ù–∞–∑–∞–¥", condition)

    def build_access_invitations(self):
        """–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        condition = "user_role == super_admin"

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
        self.add_node("access_create_invite_admin", "action", 4,
                     "–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", fsm=True)
        self.add_edge("access_invitations_menu", "access_create_invite_admin",
                     "access_create_invite_admin",
                     "‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", condition)

        self.add_node("access_create_invite_user", "action", 4,
                     "–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", fsm=True)
        self.add_edge("access_invitations_menu", "access_create_invite_user",
                     "access_create_invite_user",
                     "‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", condition)

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
        self.add_node("access_set_invite_expiry", "action", 5,
                     "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è", fsm=True)
        self.add_edge("access_create_invite_admin", "access_set_invite_expiry",
                     "access_set_invite_expiry", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è", condition)

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è
        self.add_node("access_confirm_create_invite", "action", 5, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è")
        self.add_edge("access_create_invite_admin", "access_confirm_create_invite",
                     "access_confirm_create_invite||{role}", "–°–æ–∑–¥–∞—Ç—å", condition)

        # –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
        self.add_node("access_list_invites", "view", 4, "–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π")
        self.add_edge("access_invitations_menu", "access_list_invites",
                     "access_list_invites", "üìú –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", condition)

        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        self.add_node("access_list_invites||page", "view", 4, "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π", dynamic=True)
        self.add_edge("access_list_invites", "access_list_invites||page",
                     "access_list_invites||page||{n}", "‚û°Ô∏è –°–ª–µ–¥—É—é—â–∞—è", condition)

        # –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        self.add_node("access_invite_details", "view", 5, "–î–µ—Ç–∞–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", dynamic=True)
        self.add_edge("access_list_invites", "access_invite_details",
                     "access_invite_details||{invite_code}", "üé´ [CODE]", condition)

        # –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
        self.add_node("access_revoke_invite", "action", 6, "–ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è")
        self.add_edge("access_invite_details", "access_revoke_invite",
                     "access_revoke_invite||{invite_code}", "‚ùå –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å", condition)

        self.add_node("access_confirm_revoke", "action", 7, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è")
        self.add_edge("access_revoke_invite", "access_confirm_revoke",
                     "access_confirm_revoke||{invite_code}", "‚úÖ –î–∞, –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å", condition)

        # –ù–∞–∑–∞–¥
        self.add_edge("access_invitations_menu", "menu_access", "menu_access",
                     "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_invite_details", "access_list_invites",
                     "access_list_invites", "üîô –ù–∞–∑–∞–¥", condition)

    def build_access_security(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        condition = "user_role == super_admin"

        # –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞
        self.add_node("access_cleanup_settings", "menu", 4, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏")
        self.add_edge("access_security_menu", "access_cleanup_settings",
                     "access_cleanup_settings", "üïí –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π", condition)

        self.add_node("access_set_cleanup_hours", "action", 5, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—á–∏—Å—Ç–∫–∏", fsm=True)
        self.add_edge("access_cleanup_settings", "access_set_cleanup_hours",
                     "access_set_cleanup_hours", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è (1-48—á)", condition)

        self.add_node("access_cleanup_per_user", "menu", 5, "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.add_edge("access_cleanup_settings", "access_cleanup_per_user",
                     "access_cleanup_per_user", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", condition)

        self.add_node("access_set_user_cleanup", "action", 6,
                     "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", fsm=True, dynamic=True)
        self.add_edge("access_cleanup_per_user", "access_set_user_cleanup",
                     "access_set_user_cleanup||{user_id}", "[Username]", condition)

        self.add_node("access_view_cleanup_schedule", "view", 5, "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏")
        self.add_edge("access_cleanup_settings", "access_view_cleanup_schedule",
                     "access_view_cleanup_schedule", "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", condition)

        # –ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π
        self.add_node("access_password_policy", "menu", 4, "–ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π")
        self.add_edge("access_security_menu", "access_password_policy",
                     "access_password_policy", "üîê –ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π", condition)

        self.add_node("access_set_min_length", "action", 5, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã", fsm=True)
        self.add_edge("access_password_policy", "access_set_min_length",
                     "access_set_min_length", "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞", condition)

        self.add_node("access_set_complexity", "action", 5, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        self.add_edge("access_password_policy", "access_set_complexity",
                     "access_set_complexity", "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏", condition)

        self.add_node("access_set_password_ttl", "action", 5, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è", fsm=True)
        self.add_edge("access_password_policy", "access_set_password_ttl",
                     "access_set_password_ttl", "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è", condition)

        # –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π
        self.add_node("access_audit_log", "menu", 4, "–ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π")
        self.add_edge("access_security_menu", "access_audit_log",
                     "access_audit_log", "üìù –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π", condition)

        self.add_node("access_view_recent_log", "view", 5, "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π")
        self.add_edge("access_audit_log", "access_view_recent_log",
                     "access_view_recent_log", "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π", condition)

        self.add_node("access_filter_log_user", "action", 5, "–§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        self.add_edge("access_audit_log", "access_filter_log_user",
                     "access_filter_log_user", "–§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", condition)

        self.add_node("access_filter_log_event", "action", 5, "–§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è")
        self.add_edge("access_audit_log", "access_filter_log_event",
                     "access_filter_log_event", "–§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Å–æ–±—ã—Ç–∏—è", condition)

        self.add_node("access_export_log", "action", 5, "–≠–∫—Å–ø–æ—Ä—Ç –∂—É—Ä–Ω–∞–ª–∞")
        self.add_edge("access_audit_log", "access_export_log",
                     "access_export_log", "–≠–∫—Å–ø–æ—Ä—Ç –∂—É—Ä–Ω–∞–ª–∞", condition)

        # –ù–∞–∑–∞–¥
        self.add_edge("access_security_menu", "menu_access", "menu_access",
                     "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_cleanup_settings", "access_security_menu",
                     "access_security_menu", "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_password_policy", "access_security_menu",
                     "access_security_menu", "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_audit_log", "access_security_menu",
                     "access_security_menu", "üîô –ù–∞–∑–∞–¥", condition)
        self.add_edge("access_cleanup_per_user", "access_cleanup_settings",
                     "access_cleanup_settings", "üîô –ù–∞–∑–∞–¥", condition)

    def build_help_menu(self):
        """–ú–µ–Ω—é –ø–æ–º–æ—â–∏"""
        # –ì–õ–ê–í–ù–´–ô –£–ó–ï–õ (–±—ã–ª–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ!)
        self.add_node("menu_help", "menu", 1, "–ü–æ–º–æ—â—å")

        self.add_node("help_about", "view", 2, "–û –±–æ—Ç–µ")
        self.add_edge("menu_help", "help_about", "help_about", "üì± –û –±–æ—Ç–µ")

        self.add_node("help_functions", "view", 2, "–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞")
        self.add_edge("menu_help", "help_functions", "help_functions", "üõ†Ô∏è –§—É–Ω–∫—Ü–∏–∏")

        self.add_node("help_stats", "view", 2, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
        self.add_edge("menu_help", "help_stats", "help_stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

        self.add_node("help_tips", "view", 2, "–°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        self.add_edge("menu_help", "help_tips", "help_tips", "üí° –°–æ–≤–µ—Ç—ã")

        # –ù–∞–∑–∞–¥
        self.add_edge("menu_help", "menu_main", "menu_main", "üîô –ù–∞–∑–∞–¥")

    def build_audio_processing(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ"""
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        self.add_node("confirm_menu", "menu", 1, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞—É–¥–∏–æ")
        self.add_node("confirm_data", "action", 2, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        self.add_edge("confirm_menu", "confirm_data", "confirm_data", "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")

        self.add_node("edit_data", "action", 2, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        self.add_edge("confirm_menu", "edit_data", "edit_data", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å")

        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        self.add_node("edit_menu", "menu", 3, "–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        self.add_edge("edit_data", "edit_menu", "edit_menu", "[–ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è]")

        self.add_node("edit_audio_number", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ñ–∞–π–ª–∞", fsm=True)
        self.add_edge("edit_menu", "edit_audio_number", "edit_audio_number", "–ù–æ–º–µ—Ä —Ñ–∞–π–ª–∞")

        self.add_node("edit_date", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã", fsm=True)
        self.add_edge("edit_menu", "edit_date", "edit_date", "–î–∞—Ç–∞")

        self.add_node("edit_employee", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", fsm=True)
        self.add_edge("edit_menu", "edit_employee", "edit_employee", "–§–ò–û –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")

        self.add_node("edit_place_name", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è", fsm=True)
        self.add_edge("edit_menu", "edit_place_name", "edit_place_name", "–ó–∞–≤–µ–¥–µ–Ω–∏–µ")

        self.add_node("edit_city", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞", fsm=True)
        self.add_edge("edit_menu", "edit_city", "edit_city", "–ì–æ—Ä–æ–¥")

        self.add_node("edit_zone_name", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–æ–Ω—ã", fsm=True)
        self.add_edge("edit_menu", "edit_zone_name", "edit_zone_name", "–ó–æ–Ω–∞")

        self.add_node("edit_client", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞", fsm=True)
        self.add_edge("edit_menu", "edit_client", "edit_client", "–ö–ª–∏–µ–Ω—Ç")

        self.add_node("edit_building_type", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∑–¥–∞–Ω–∏—è")
        self.add_edge("edit_menu", "edit_building_type", "edit_building_type", "–¢–∏–ø –∑–¥–∞–Ω–∏—è")

        self.add_node("edit_mode", "action", 4, "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã")
        self.add_edge("edit_menu", "edit_mode", "edit_mode", "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")

        self.add_node("back_to_confirm", "action", 4, "–í–æ–∑–≤—Ä–∞—Ç –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é")
        self.add_edge("edit_menu", "back_to_confirm", "back_to_confirm", "üîô –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é")
        self.add_edge("back_to_confirm", "confirm_menu", "confirm_menu", "[–í–æ–∑–≤—Ä–∞—Ç]")

        # –¢–∏–ø –∑–¥–∞–Ω–∏—è
        self.add_node("building_type_menu", "menu", 3, "–í—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–¥–∞–Ω–∏—è")
        self.add_edge("confirm_data", "building_type_menu", "building_type_menu", "[–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è]")
        self.add_edge("edit_building_type", "building_type_menu", "building_type_menu", "[–ü–µ—Ä–µ—Ö–æ–¥]")

        self.add_node("choose_building||hotel", "action", 4, "–í—ã–±–æ—Ä: –û—Ç–µ–ª—å")
        self.add_edge("building_type_menu", "choose_building||hotel", "choose_building||hotel", "üè® –û—Ç–µ–ª—å")

        self.add_node("choose_building||restaurant", "action", 4, "–í—ã–±–æ—Ä: –†–µ—Å—Ç–æ—Ä–∞–Ω")
        self.add_edge("building_type_menu", "choose_building||restaurant",
                     "choose_building||restaurant", "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω")

        self.add_node("choose_building||other", "action", 4, "–í—ã–±–æ—Ä: –î—Ä—É–≥–æ–µ")
        self.add_edge("building_type_menu", "choose_building||other",
                     "choose_building||other", "üè¢ –î—Ä—É–≥–æ–µ")

        # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
        self.add_node("interview_menu", "menu", 4, "–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã (–∏–Ω—Ç–µ—Ä–≤—å—é)")
        self.add_node("design_menu", "menu", 4, "–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã (–¥–∏–∑–∞–π–Ω)")

        self.add_edge("choose_building||hotel", "interview_menu", "interview_menu", "[–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è]")
        self.add_edge("choose_building||restaurant", "interview_menu", "interview_menu", "[–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è]")
        self.add_edge("choose_building||other", "interview_menu", "interview_menu", "[–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è]")
        self.add_edge("edit_mode", "interview_menu", "interview_menu", "[–ü–µ—Ä–µ—Ö–æ–¥]")

        self.add_node("mode_fast", "action", 5, "–ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º")
        self.add_edge("interview_menu", "mode_fast", "mode_fast", "‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º")

        self.add_node("mode_deep", "action", 5, "–ì–ª—É–±–æ–∫–∏–π —Ä–µ–∂–∏–º")
        self.add_edge("interview_menu", "mode_deep", "mode_deep", "üî¨ –ì–ª—É–±–æ–∫–∏–π —Ä–µ–∂–∏–º")

    def build_auth_flows(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è"""
        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        self.add_node("invite_password_input", "action", 1, "–í–≤–æ–¥ –ø–∞—Ä–æ–ª—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", fsm=True)
        self.add_node("invite_password_confirm", "action", 2, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è", fsm=True)
        self.add_edge("invite_password_input", "invite_password_confirm",
                     "invite_password_confirm", "[–ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è]")

        # –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
        self.add_node("change_password_current", "action", 1, "–í–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–æ–ª—è", fsm=True)
        self.add_node("change_password_new", "action", 2, "–í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è", fsm=True)
        self.add_node("change_password_confirm", "action", 3, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è", fsm=True)

        self.add_edge("change_password_current", "change_password_new",
                     "change_password_new", "[–ü–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–æ–ª—è]")
        self.add_edge("change_password_new", "change_password_confirm",
                     "change_password_confirm", "[–ü–æ—Å–ª–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è]")

    def build_all(self):
        """–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤—Å–µ–≥–æ –≥—Ä–∞—Ñ–∞"""
        self.build_main_menu()
        self.build_chats_menu()
        self.build_chat_actions()
        self.build_my_reports()
        self.build_system_menu()
        self.build_storage_menu()
        self.build_access_menu()
        self.build_access_users()
        self.build_access_invitations()
        self.build_access_security()
        self.build_help_menu()
        self.build_audio_processing()
        self.build_auth_flows()

    def validate(self) -> tuple[bool, list]:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞"""
        errors = []

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –æ—Ç menu_main
        reachable = set()
        stack = ["menu_main"]

        while stack:
            node = stack.pop()
            if node in reachable:
                continue
            reachable.add(node)

            for edge in self.edges:
                if edge["from"] == node and edge["to"] not in reachable:
                    stack.append(edge["to"])

        # –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–∑–ª—ã
        all_nodes = set(self.nodes.keys())
        isolated = all_nodes - reachable

        # FSM –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É–∑–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ (entry points)
        isolated_non_special = {
            node for node in isolated
            if not self.nodes[node].get("fsm") and node not in [
                "invite_password_input", "invite_password_confirm",
                "change_password_current", "change_password_new",
                "change_password_confirm", "confirm_menu"
            ]
        }

        if isolated_non_special:
            errors.append(f"–ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–∑–ª—ã: {isolated_non_special}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —É–∑–ª–æ–≤ –≤ edges
        for edge in self.edges:
            if edge["from"] not in self.nodes:
                errors.append(f"–£–∑–µ–ª '{edge['from']}' –≤ edge –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            if edge["to"] not in self.nodes:
                errors.append(f"–£–∑–µ–ª '{edge['to']}' –≤ edge –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        return len(errors) == 0, errors

    def to_json(self) -> dict:
        """–≠–∫—Å–ø–æ—Ä—Ç –≤ JSON"""
        return {
            "nodes": self.nodes,
            "edges": self.edges
        }

    def get_stats(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        node_types = {}
        for node in self.nodes.values():
            t = node["type"]
            node_types[t] = node_types.get(t, 0) + 1

        dynamic = sum(1 for n in self.nodes.values() if n.get("dynamic"))
        fsm = sum(1 for n in self.nodes.values() if n.get("fsm"))
        conditional = sum(1 for e in self.edges if e.get("condition"))

        # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ callback_data
        callbacks = set(e["callback_data"] for e in self.edges)

        return {
            "nodes_total": len(self.nodes),
            "edges_total": len(self.edges),
            "node_types": node_types,
            "dynamic_nodes": dynamic,
            "fsm_nodes": fsm,
            "conditional_edges": conditional,
            "unique_callbacks": len(callbacks)
        }


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üå≥ –ü–û–°–¢–†–û–ò–¢–ï–õ–¨ –ì–†–ê–§–ê –ú–ï–ù–Æ VOXPERSONA v3 (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)")
    print("=" * 70)

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∞
    print("\nüî® –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∞ –º–µ–Ω—é...")
    builder = MenuGraphBuilder()
    builder.build_all()

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = builder.get_stats()
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –£–∑–ª–æ–≤ (nodes): {stats['nodes_total']}")
    print(f"   –°–≤—è–∑–µ–π (edges): {stats['edges_total']}")
    print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö callback_data: {stats['unique_callbacks']}")

    print(f"\n   –ü–æ —Ç–∏–ø–∞–º —É–∑–ª–æ–≤:")
    for t, count in sorted(stats['node_types'].items()):
        print(f"      {t}: {count}")

    print(f"\n   –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —É–∑–ª—ã: {stats['dynamic_nodes']}")
    print(f"   FSM —É–∑–ª—ã: {stats['fsm_nodes']}")
    print(f"   –£—Å–ª–æ–≤–Ω—ã–µ —Å–≤—è–∑–∏ (super_admin): {stats['conditional_edges']}")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    print("\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞...")
    is_valid, errors = builder.validate()

    if is_valid:
        print("‚úÖ –ì—Ä–∞—Ñ –≤–∞–ª–∏–¥–µ–Ω! –í—Å–µ —É–∑–ª—ã –¥–æ—Å—Ç–∏–∂–∏–º—ã –∏–ª–∏ —è–≤–ª—è—é—Ç—Å—è entry points.")
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        for error in errors:
            print(f"   - {error}")

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    output_path = Path(__file__).parent.parent / "config" / "menu_graph.json"
    output_path.parent.mkdir(parents=True, exist_ok=True)

    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {output_path}")
    with open(output_path, 'w', encoding='utf-8') as f:
        json.dump(builder.to_json(), f, ensure_ascii=False, indent=2)

    file_size = output_path.stat().st_size
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {file_size / 1024:.2f} KB")

    # –ü—Ä–∏–º–µ—Ä—ã —É–∑–ª–æ–≤
    print(f"\nüìã –ü–†–ò–ú–ï–†–´ –£–ó–õ–û–í:")
    examples = [
        "menu_main", "menu_chats", "chat_actions", "access_user_details",
        "new_chat", "send_report", "menu_help"
    ]
    for node_id in examples:
        if node_id in builder.nodes:
            n = builder.nodes[node_id]
            flags = []
            if n.get("dynamic"):
                flags.append("dynamic")
            if n.get("fsm"):
                flags.append("fsm")
            flags_str = f" [{', '.join(flags)}]" if flags else ""
            print(f"   {node_id}: {n['type']} (depth={n['depth']}){flags_str}")

    # –ü—Ä–∏–º–µ—Ä—ã —Å–≤—è–∑–µ–π
    print(f"\nüîó –ü–†–ò–ú–ï–†–´ –°–í–Ø–ó–ï–ô:")
    edge_examples = builder.edges[:8]
    for e in edge_examples:
        cond_str = f" [CONDITION: {e['condition']}]" if e.get("condition") else ""
        print(f"   {e['from']} ‚Üí {e['to']}{cond_str}")
        print(f"      callback: {e['callback_data']}")

    print("\n" + "=" * 70)
    print("‚úÖ –ì–û–¢–û–í–û! menu_graph.json —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ.")
    print("\nüìå –ò–¢–û–ì–û–í–´–ï –ú–ï–¢–†–ò–ö–ò:")
    print(f"   ‚úÖ –£–∑–ª–æ–≤: {stats['nodes_total']}")
    print(f"   ‚úÖ –°–≤—è–∑–µ–π: {stats['edges_total']}")
    print(f"   ‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö callback_data: {stats['unique_callbacks']}")
    print(f"   ‚úÖ –ì—Ä–∞—Ñ –≤–∞–ª–∏–¥–µ–Ω: {is_valid}")
    print(f"\nüéØ –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø–ú:")
    print(f"   ‚úÖ –û–∂–∏–¥–∞–ª–æ—Å—å: 81+ callback_data")
    print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ: {stats['unique_callbacks']} callback_data")
    print(f"   ‚úÖ –í—Å–µ —É–∑–ª—ã —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (menu/action/view)")
    print(f"   ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —É–∑–ª—ã –ø–æ–º–µ—á–µ–Ω—ã")
    print(f"   ‚úÖ FSM —É–∑–ª—ã –ø–æ–º–µ—á–µ–Ω—ã")
    print(f"   ‚úÖ –£—Å–ª–æ–≤–Ω—ã–µ —Å–≤—è–∑–∏ (super_admin) –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")


if __name__ == "__main__":
    main()
