"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ü–∏–∫–ª–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –º–µ–Ω—é –≤ –±–æ—Ç–µ.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥–æ–µ –º–µ–Ω—é –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —É–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ:
1. –°—Ç–∞—Ä–æ–µ –º–µ–Ω—é –ü–û–õ–ù–û–°–¢–¨–Æ —É–¥–∞–ª—è–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏)
2. –ù–æ–≤–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤–Ω–∏–∑—É —á–∞—Ç–∞
3. –ù–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
"""

import asyncio
from unittest.mock import MagicMock, AsyncMock
from pyrogram import Client
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from menu_manager import MenuManager, send_menu


# –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–µ–Ω—é –∏–∑ menu_analysis.md
ALL_MENUS = [
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ–Ω—é
    ("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", "main_menu"),
    ("–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å?", "dialog_mode"),
    ("üí¨ –í–∞—à–∏ —á–∞—Ç—ã:", "chats_menu"),

    # –ù–æ–≤—ã–π —á–∞—Ç –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
    ("‚ú® –ù–æ–≤—ã–π —á–∞—Ç —Å–æ–∑–¥–∞–Ω!\n\n–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å?\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", "new_chat"),
    ("‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ —á–∞—Ç: –¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç\n\nüìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π:\n\nüí¨ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", "switch_chat"),
    ("üîÑ –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç '–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç'?", "confirm_switch"),

    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ
    ("‚úÖ –ß–∞—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ '–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'\n\n–í–∞—à–∏ —á–∞—Ç—ã:", "rename_result"),
    ("‚úÖ –ß–∞—Ç —É–¥–∞–ª–µ–Ω\n\n–í–∞—à–∏ —á–∞—Ç—ã:", "delete_result"),
    ("‚ö†Ô∏è –£–¥–∞–ª–∏—Ç—å —á–∞—Ç '–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç'?\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.", "delete_confirm"),

    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ–Ω—é
    ("‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", "system_menu"),
    ("üì¶ –ú–µ–Ω—é —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:", "storage_menu"),
    ("–§–∞–π–ª—ã –≤ 'audio':", "files_menu"),

    # –°—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–±–æ—Ç—ã
    ("–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º?:", "scenario_menu"),
    ("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è:", "building_type"),

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    ("–ö–∞–∫–æ–µ –ø–æ–ª–µ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", "edit_menu"),

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    ("üìå –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:\n\n1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π\n2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ (–±—ã—Å—Ç—Ä—ã–π –∏–ª–∏ –≥–ª—É–±–æ–∫–∏–π)\n3Ô∏è‚É£ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å\n\n–û—Ç–∫—Ä–æ–π—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∏–∂–µ üëá", "instructions"),
]


def test_full_menu_cycle():
    """
    –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –º–µ–Ω—é –±–æ—Ç–∞.
    """
    print("\n" + "="*70)
    print("–ü–û–õ–ù–´–ô –¢–ï–°–¢ –¶–ò–ö–õ–ê –û–ß–ò–°–¢–ö–ò –í–°–ï–• –ú–ï–ù–Æ")
    print("="*70)

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    MenuManager._last_menu_ids.clear()

    chat_id = 12345
    app = MagicMock(spec=Client)
    app.delete_messages = AsyncMock()

    artifacts_found = []
    successful_deletions = []

    for i, (menu_text, menu_id) in enumerate(ALL_MENUS, 1):
        print(f"\n{'‚îÄ'*70}")
        print(f"–®–ê–ì {i}/{len(ALL_MENUS)}: {menu_id}")
        print(f"{'‚îÄ'*70}")
        print(f"üìù –¢–µ–∫—Å—Ç –º–µ–Ω—é: '{menu_text[:60]}{'...' if len(menu_text) > 60 else ''}'")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –ü–ï–†–ï–î –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        mock_message = MagicMock(spec=Message)
        mock_message.id = i + 100  # message_id: 101, 102, 103...
        app.send_message = AsyncMock(return_value=mock_message)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ä–∞–∑–º–µ—Ç–∫—É
        markup = InlineKeyboardMarkup([[
            InlineKeyboardButton("–¢–µ—Å—Ç", callback_data="test")
        ]])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é
        asyncio.run(send_menu(
            chat_id=chat_id,
            app=app,
            text=menu_text,
            reply_markup=markup
        ))

        # –¢–ï–ü–ï–†–¨ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ü–û–°–õ–ï –æ—Ç–ø—Ä–∞–≤–∫–∏
        if i > 1:
            prev_text = ALL_MENUS[i-2][0]
            prev_id = i + 99  # message_id –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ

            print(f"\nüîç –ü–†–û–í–ï–†–ö–ê —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é:")
            print(f"   üìå message_id={prev_id}")
            print(f"   üìù –¢–µ–∫—Å—Ç: '{prev_text[:50]}{'...' if len(prev_text) > 50 else ''}'")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ delete_messages –±—ã–ª –≤—ã–∑–≤–∞–Ω
            if app.delete_messages.call_count > 0:
                last_call = app.delete_messages.call_args
                deleted_id = last_call.kwargs.get('message_ids')

                if deleted_id == prev_id:
                    print(f"   ‚úÖ –£–°–ü–ï–•: delete_messages –≤—ã–∑–≤–∞–Ω –¥–ª—è message_id={deleted_id}")
                    print(f"   ‚úÖ –°—Ç–∞—Ä–æ–µ –º–µ–Ω—é –ü–û–õ–ù–û–°–¢–¨–Æ —É–¥–∞–ª–µ–Ω–æ (—Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏)")
                    successful_deletions.append({
                        'step': i-1,
                        'menu': ALL_MENUS[i-2][1],
                        'text': prev_text,
                        'message_id': deleted_id
                    })
                else:
                    print(f"   ‚ùå –û–®–ò–ë–ö–ê: delete_messages –≤—ã–∑–≤–∞–Ω –¥–ª—è {deleted_id}, –æ–∂–∏–¥–∞–ª–æ—Å—å {prev_id}")
                    artifacts_found.append({
                        'step': i-1,
                        'menu': ALL_MENUS[i-2][1],
                        'text': prev_text,
                        'expected_id': prev_id,
                        'actual_id': deleted_id
                    })
            else:
                print(f"   ‚ùå –û–®–ò–ë–ö–ê: delete_messages –ù–ï –±—ã–ª –≤—ã–∑–≤–∞–Ω!")
                print(f"   ‚ùå –¢–µ–∫—Å—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —á–∞—Ç–µ: '{prev_text[:50]}'")
                artifacts_found.append({
                    'step': i-1,
                    'menu': ALL_MENUS[i-2][1],
                    'text': prev_text,
                    'error': 'delete_messages –Ω–µ –≤—ã–∑–≤–∞–Ω'
                })

        print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –º–µ–Ω—é:")
        print(f"   message_id={mock_message.id}")
        print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ MenuManager._last_menu_ids[{chat_id}]")

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "="*70)
    print("–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("="*70)

    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ –º–µ–Ω—é –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ: {len(ALL_MENUS)}")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∏–π: {len(successful_deletions)}")
    print(f"   –ù–∞–π–¥–µ–Ω–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤: {len(artifacts_found)}")

    if len(artifacts_found) > 0:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ê–†–¢–ï–§–ê–ö–¢–´:")
        print("‚îÅ"*70)
        for artifact in artifacts_found:
            print(f"\n–®–∞–≥ {artifact['step']} - {artifact['menu']}:")
            print(f"  –¢–µ–∫—Å—Ç: '{artifact['text'][:60]}...'")
            if 'error' in artifact:
                print(f"  –û—à–∏–±–∫–∞: {artifact['error']}")
            else:
                print(f"  –û–∂–∏–¥–∞–ª—Å—è ID: {artifact['expected_id']}")
                print(f"  –ü–æ–ª—É—á–µ–Ω ID: {artifact['actual_id']}")
        print("‚îÅ"*70)
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å MenuManager._remove_old_menu_buttons()")
        print("   –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è delete_messages, –∞ –Ω–µ edit_message_reply_markup")
    else:
        print("\n‚úÖ –í–°–ï –ú–ï–ù–Æ –û–ß–ò–©–ê–Æ–¢–°–Ø –ü–†–ê–í–ò–õ–¨–ù–û!")
        print("‚îÅ"*70)
        print("   ‚úì –°—Ç–∞—Ä—ã–µ –º–µ–Ω—é –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è—é—Ç—Å—è")
        print("   ‚úì –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –Ω–µ –æ—Å—Ç–∞—é—Ç—Å—è")
        print("   ‚úì –ß–∞—Ç –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è–µ—Ç—Å—è")
        print("‚îÅ"*70)

    print(f"\nüìã –£–°–ü–ï–®–ù–´–ï –£–î–ê–õ–ï–ù–ò–Ø:")
    print("‚îÅ"*70)
    for deletion in successful_deletions[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"   ‚úì {deletion['menu']} (message_id={deletion['message_id']})")
    if len(successful_deletions) > 5:
        print(f"   ... –∏ –µ—â–µ {len(successful_deletions) - 5} —É–¥–∞–ª–µ–Ω–∏–π")
    print("‚îÅ"*70)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    final_menu_id = MenuManager._last_menu_ids.get(chat_id)
    expected_final_id = len(ALL_MENUS) + 100

    print(f"\nüîç –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ–Ω—é ID: {final_menu_id}")
    print(f"   –û–∂–∏–¥–∞–µ–º—ã–π ID: {expected_final_id}")

    if final_menu_id == expected_final_id:
        print(f"   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ ID")

    print("\n" + "="*70)
    print("–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("="*70 + "\n")

    # Assertions –¥–ª—è pytest
    assert len(artifacts_found) == 0, f"–ù–∞–π–¥–µ–Ω–æ {len(artifacts_found)} –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –º–µ–Ω—é!"
    assert final_menu_id == expected_final_id, "–û—à–∏–±–∫–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ ID –º–µ–Ω—é"
    assert len(successful_deletions) == len(ALL_MENUS) - 1, "–ù–µ –≤—Å–µ –º–µ–Ω—é –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã"


def test_edge_cases():
    """
    –¢–µ—Å—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤.
    """
    print("\n" + "="*70)
    print("–¢–ï–°–¢ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í")
    print("="*70)

    MenuManager._last_menu_ids.clear()
    chat_id = 12345
    app = MagicMock(spec=Client)
    app.delete_messages = AsyncMock()

    # 1. –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –º–µ–Ω—é
    print("\n1. –¢–µ—Å—Ç –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –º–µ–Ω—é:")
    long_text = "üìå " + "–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –º–µ–Ω—é " * 50
    mock_message = MagicMock(spec=Message)
    mock_message.id = 1000
    app.send_message = AsyncMock(return_value=mock_message)

    markup = InlineKeyboardMarkup([[InlineKeyboardButton("–¢–µ—Å—Ç", callback_data="test")]])
    asyncio.run(send_menu(chat_id, app, long_text, markup))

    print(f"   ‚úÖ –î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, message_id={mock_message.id}")

    # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏
    print("\n2. –¢–µ—Å—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤:")
    same_text = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:"

    mock_message2 = MagicMock(spec=Message)
    mock_message2.id = 1001
    app.send_message = AsyncMock(return_value=mock_message2)
    app.delete_messages.reset_mock()

    asyncio.run(send_menu(chat_id, app, same_text, markup))

    if app.delete_messages.called:
        print(f"   ‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é —É–¥–∞–ª–µ–Ω–æ, –¥–∞–∂–µ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º")
    else:
        print(f"   ‚ùå –ú–µ–Ω—é –ù–ï —É–¥–∞–ª–µ–Ω–æ!")

    # 3. –ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    print("\n3. –¢–µ—Å—Ç –ø—É—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:")
    empty_text = ""

    mock_message3 = MagicMock(spec=Message)
    mock_message3.id = 1002
    app.send_message = AsyncMock(return_value=mock_message3)

    asyncio.run(send_menu(chat_id, app, empty_text, markup))

    print(f"   ‚úÖ –ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, message_id={mock_message3.id}")

    # 4. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    print("\n4. –¢–µ—Å—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤:")
    special_text = "üéâüî•üíØ –ú–µ–Ω—é —Å —ç–º–æ–¥–∑–∏ –∏ <b>HTML</b> & —Å–ø–µ—Ü.—Å–∏–º–≤–æ–ª–∞–º–∏!"

    mock_message4 = MagicMock(spec=Message)
    mock_message4.id = 1003
    app.send_message = AsyncMock(return_value=mock_message4)

    asyncio.run(send_menu(chat_id, app, special_text, markup))

    print(f"   ‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã, message_id={mock_message4.id}")

    print("\n" + "="*70)
    print("–í–°–ï –ì–†–ê–ù–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û")
    print("="*70 + "\n")


if __name__ == "__main__":
    print("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë  –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –û–ß–ò–°–¢–ö–ò –í–°–ï–• –ú–ï–ù–Æ VOXPERSONA BOT               ‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

    # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤—Å–µ—Ö –º–µ–Ω—é
    test_full_menu_cycle()

    # –¢–µ—Å—Ç 2: –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
    test_edge_cases()

    print("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë  ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û                                   ‚ïë")
    print("‚ïë  ‚úÖ MenuManager –ü–û–õ–ù–û–°–¢–¨–Æ —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –º–µ–Ω—é                    ‚ïë")
    print("‚ïë  ‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –ù–ï –æ—Å—Ç–∞—é—Ç—Å—è –≤ —á–∞—Ç–µ                      ‚ïë")
    print("‚ïë  ‚úÖ –ß–∞—Ç –ù–ï –∑–∞—Ö–ª–∞–º–ª—è–µ—Ç—Å—è                                          ‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n")
