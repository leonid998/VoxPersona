"""
–ê–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –∏ —Å–ø–∏—Å–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –≤ –≤–∏–¥–µ .txt —Ñ–∞–π–ª–æ–≤.

–ú–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –±–æ—Ç
—á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º throttling –ø–æ–ª–∏—Ç–∏–∫–∏ (24 —á–∞—Å–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏).

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç:
- BytesIO –≤–º–µ—Å—Ç–æ tempfile –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- –†–µ–≤–µ—Ä—Å —á–µ—Ä–µ–∑ [::-1] –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
- Graceful error handling –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
- JSON throttling –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —á–∞—Å—Ç–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–æ–∫

–ü—Ä–∏–Ω—Ü–∏–ø—ã:
- Single Responsibility: –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç –æ–¥–Ω–æ –¥–µ–ª–æ
- Open/Closed: –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –Ω–æ–≤—ã–º–∏ —Ç–∏–ø–∞–º–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
- Liskov Substitution: –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º
- Interface Segregation: –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- Dependency Inversion: –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π (–º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤)
"""

import logging
from io import BytesIO
from datetime import datetime, timedelta
from pathlib import Path
import json
from typing import List, Optional

from conversation_manager import conversation_manager
from md_storage import md_storage_manager, ReportMetadata
from conversations import ConversationMessage
from config import THROTTLE_DATA_DIR
from pyrogram import Client
from markups import make_dialog_markup

logger = logging.getLogger(__name__)

# ============================================================================
#                           –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ============================================================================

THROTTLE_HOURS = 24  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∞–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä)
THROTTLE_FILE = Path(THROTTLE_DATA_DIR) / "throttle_history.json"

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è (graceful degradation)
try:
    THROTTLE_FILE.parent.mkdir(parents=True, exist_ok=True)
    logger.debug(f"Throttle directory verified: {THROTTLE_FILE.parent}")
except (PermissionError, OSError) as e:
    logger.warning(
        f"Failed to create throttle directory {THROTTLE_FILE.parent}: {e}. "
        "Throttling functionality may not work correctly."
    )
MAX_MESSAGES = 200  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
MAX_REPORTS = 200   # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞


# ============================================================================
#                           –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•
# ============================================================================

def format_history_for_file(
    messages: List[ConversationMessage],
    chat_title: str
) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç.

    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º,
    –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏. –°–æ–æ–±—â–µ–Ω–∏—è –Ω—É–º–µ—Ä—É—é—Ç—Å—è
    –∏ –º–∞—Ä–∫–∏—Ä—É—é—Ç—Å—è —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞.

    Args:
        messages: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ ConversationMessage (—É–∂–µ —Ä–µ–≤–µ—Ä—Å–Ω—É—Ç—ã–π!).
                 –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º –≤ —Å–ø–∏—Å–∫–µ.
        chat_title: –ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ñ–∞–π–ª–∞.

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ .txt —Ñ–∞–π–ª.
             –í–∫–ª—é—á–∞–µ—Ç:
             - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —á–∞—Ç–∞
             - Timestamp —ç–∫—Å–ø–æ—Ä—Ç–∞
             - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
             - –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π

    Example:
        >>> messages = [msg3, msg2, msg1]  # –†–µ–≤–µ—Ä—Å–Ω—É—Ç—ã–π —Å–ø–∏—Å–æ–∫
        >>> text = format_history_for_file(messages, "–ú–æ–π —á–∞—Ç")
        >>> print(text)
        ============================================================
        –ò–°–¢–û–†–ò–Ø –ß–ê–¢–ê: –ú–æ–π —á–∞—Ç
        –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 07.10.2025 14:30:00
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: 3
        ============================================================

        [1] ü§ñ –ë–æ—Ç (07.10.2025 14:25:00)
        –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...

        [2] üßë –í—ã (07.10.2025 14:20:00)
        –ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...
    """
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    current_time = datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    separator = "=" * 60

    header = f"""{separator}
–ò–°–¢–û–†–ò–Ø –ß–ê–¢–ê: {chat_title}
–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {current_time}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}
{separator}

"""

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    lines = [header]

    for i, msg in enumerate(messages, 1):
        # –ü–∞—Ä—Å–∏–Ω–≥ timestamp (ISO —Ñ–æ—Ä–º–∞—Ç -> —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π)
        try:
            timestamp = datetime.fromisoformat(msg.timestamp).strftime("%d.%m.%Y %H:%M:%S")
        except (ValueError, AttributeError):
            timestamp = msg.timestamp[:16].replace('T', ' ')

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —Å —ç–º–æ–¥–∑–∏
        if msg.type == "user_question":
            role = "üßë –í—ã"
        elif msg.type == "bot_answer":
            role = "ü§ñ –ë–æ—Ç"
        else:
            role = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

        # –ú–∞—Ä–∫–µ—Ä —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ —Ñ–∞–π–ª)
        file_marker = " üìé" if msg.sent_as == "file" else ""

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        formatted = f"[{i}] {role} ({timestamp}){file_marker}\n{msg.text}\n\n"
        lines.append(formatted)

    return "".join(lines)


def format_reports_for_file(reports: List[ReportMetadata]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç.

    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º,
    –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –∫–∞–∂–¥–æ–º—É –æ—Ç—á–µ—Ç—É.

    Args:
        reports: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ ReportMetadata (—É–∂–µ —Ä–µ–≤–µ—Ä—Å–Ω—É—Ç—ã–π!).
                –ù–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–≤—ã–º–∏ –≤ —Å–ø–∏—Å–∫–µ.

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ .txt —Ñ–∞–π–ª.
             –í–∫–ª—é—á–∞–µ—Ç:
             - –ó–∞–≥–æ–ª–æ–≤–æ–∫
             - Timestamp —ç–∫—Å–ø–æ—Ä—Ç–∞
             - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤
             - –°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

    Example:
        >>> reports = [report3, report2, report1]  # –†–µ–≤–µ—Ä—Å–Ω—É—Ç—ã–π —Å–ø–∏—Å–æ–∫
        >>> text = format_reports_for_file(reports)
        >>> print(text)
        ============================================================
        –°–ü–ò–°–û–ö –û–¢–ß–ï–¢–û–í
        –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: 07.10.2025 14:30:00
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤: 3
        ============================================================

        [1] 2025-10-07 14:00:00 - voxpersona_20251007_140000.txt
            –í–æ–ø—Ä–æ—Å: –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏...
            –ü—É—Ç—å: md_reports/user_123/voxpersona_20251007_140000.txt
            –†–∞–∑–º–µ—Ä: 45.2 KB | –¢–æ–∫–µ–Ω—ã: 12,345 | –¢–∏–ø: ‚ö° –ë—ã—Å—Ç—Ä—ã–π
    """
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    current_time = datetime.now().strftime("%d.%m.%Y %H:%M:%S")
    separator = "=" * 60

    header = f"""{separator}
–°–ü–ò–°–û–ö –û–¢–ß–ï–¢–û–í
–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {current_time}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤: {len(reports)}
{separator}

"""

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
    lines = [header]

    for i, report in enumerate(reports, 1):
        # –ü–∞—Ä—Å–∏–Ω–≥ timestamp
        try:
            timestamp = datetime.fromisoformat(report.timestamp).strftime("%d.%m.%Y %H:%M:%S")
        except (ValueError, AttributeError):
            timestamp = report.timestamp[:16].replace('T', ' ')

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏
        filename = Path(report.file_path).name

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞ —Å —ç–º–æ–¥–∑–∏
        if report.search_type == "fast":
            search_icon = "‚ö° –ë—ã—Å—Ç—Ä—ã–π"
        elif report.search_type == "deep":
            search_icon = "üîç –ì–ª—É–±–æ–∫–∏–π"
        else:
            search_icon = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"

        # –†–∞–∑–º–µ—Ä –≤ KB
        size_kb = report.size_bytes / 1024

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        formatted = f"""[{i}] {timestamp} - {filename}
    –í–æ–ø—Ä–æ—Å: {report.question}
    –ü—É—Ç—å: {report.file_path}
    –†–∞–∑–º–µ—Ä: {size_kb:.1f} KB | –¢–æ–∫–µ–Ω—ã: {report.tokens:,} | –¢–∏–ø: {search_icon}

"""
        lines.append(formatted)

    return "".join(lines)


# ============================================================================
#                           THROTTLING –°–ò–°–¢–ï–ú–ê
# ============================================================================

def should_send_file(user_id: int, file_type: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (throttling).

    –ß–∏—Ç–∞–µ—Ç throttle_history.json –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏.
    –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ >= THROTTLE_HOURS —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        file_type: –¢–∏–ø —Ñ–∞–π–ª–∞ ("history" –∏–ª–∏ "reports").

    Returns:
        bool: True –µ—Å–ª–∏ —Ñ–∞–π–ª –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å (throttling –ø—Ä–æ—à–µ–ª),
              False –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.

    Example:
        >>> should_send_file(123456, "history")
        True  # –ü—Ä–æ—à–ª–æ >= 24 —á–∞—Å–∞
        >>> should_send_file(123456, "history")
        False  # –¢–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏
    """
    try:
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not THROTTLE_FILE.exists():
            logger.debug(f"Throttle file not found, allowing send for user {user_id}")
            return True

        # –ß–∏—Ç–∞–µ–º JSON
        with open(THROTTLE_FILE, 'r', encoding='utf-8') as f:
            throttle_data = json.load(f)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_key = str(user_id)
        if user_key not in throttle_data:
            logger.debug(f"No throttle record for user {user_id}, allowing send")
            return True

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º timestamp –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
        key_name = f"{file_type}_last_sent"
        if key_name not in throttle_data[user_key]:
            logger.debug(f"No {file_type} throttle for user {user_id}, allowing send")
            return True

        # –ü–∞—Ä—Å–∏–º timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        last_sent_str = throttle_data[user_key][key_name]
        last_sent = datetime.fromisoformat(last_sent_str)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
        now = datetime.now()
        time_diff = now - last_sent
        hours_passed = time_diff.total_seconds() / 3600

        if hours_passed >= THROTTLE_HOURS:
            logger.info(
                f"Throttle passed for user {user_id}, {file_type}: "
                f"{hours_passed:.1f}h since last send"
            )
            return True
        else:
            logger.info(
                f"Throttle active for user {user_id}, {file_type}: "
                f"only {hours_passed:.1f}h passed, need {THROTTLE_HOURS}h"
            )
            return False

    except json.JSONDecodeError as e:
        logger.error(f"Failed to parse throttle JSON: {e}")
        # –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É (fail-safe)
        return True
    except Exception as e:
        logger.error(f"Error checking throttle for user {user_id}: {e}")
        # –ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É (fail-safe)
        return True


def update_last_sent(user_id: int, file_type: str) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç timestamp –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –≤ throttle_history.json.

    –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data/ –∏ —Ñ–∞–π–ª throttle_history.json –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º timestamp.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        file_type: –¢–∏–ø —Ñ–∞–π–ª–∞ ("history" –∏–ª–∏ "reports").

    Example:
        >>> update_last_sent(123456, "history")
        # throttle_history.json –æ–±–Ω–æ–≤–ª–µ–Ω:
        # {
        #   "123456": {
        #     "history_last_sent": "2025-10-07T14:30:00"
        #   }
        # }
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é data/ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        THROTTLE_FILE.parent.mkdir(parents=True, exist_ok=True)

        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
        if THROTTLE_FILE.exists():
            with open(THROTTLE_FILE, 'r', encoding='utf-8') as f:
                throttle_data = json.load(f)
        else:
            throttle_data = {}

        # –û–±–Ω–æ–≤–ª—è–µ–º timestamp
        user_key = str(user_id)
        if user_key not in throttle_data:
            throttle_data[user_key] = {}

        key_name = f"{file_type}_last_sent"
        throttle_data[user_key][key_name] = datetime.now().isoformat()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
        with open(THROTTLE_FILE, 'w', encoding='utf-8') as f:
            json.dump(throttle_data, f, ensure_ascii=False, indent=2)

        logger.debug(f"Updated throttle for user {user_id}, {file_type}")

    except Exception as e:
        logger.error(f"Failed to update throttle for user {user_id}: {e}")


# ============================================================================
#                           –ê–í–¢–û–û–¢–ü–†–ê–í–ö–ê –§–ê–ô–õ–û–í
# ============================================================================

async def auto_send_history_file(user_id: int, app: Client) -> bool:
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–∏–¥–µ .txt —Ñ–∞–π–ª–∞.

    –§—É–Ω–∫—Ü–∏—è:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç throttling (24 —á–∞—Å–∞ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
    2. –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    3. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–æ–æ–±—â–µ–Ω–∏–π
    4. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç
    5. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ—Ä–µ–∑ BytesIO
    6. –û–±–Ω–æ–≤–ª—è–µ—Ç throttling timestamp

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        app: Pyrogram –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    Returns:
        bool: True –µ—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
              False –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å:
              - Throttling –∞–∫—Ç–∏–≤–µ–Ω (–Ω–µ –ø—Ä–æ—à–ª–æ 24 —á–∞—Å–∞)
              - –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
              - –ü—É—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è
              - –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ

    Example:
        >>> await auto_send_history_file(123456, app)
        True  # –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    Note:
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç BytesIO –≤–º–µ—Å—Ç–æ tempfile –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
        –†–µ–≤–µ—Ä—Å —á–µ—Ä–µ–∑ [::-1] –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏.
    """
    file_obj = None

    try:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ throttling
        if not should_send_file(user_id, "history"):
            logger.info(f"Skipping history file for user {user_id} due to throttling")
            return False

        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ (–¥–≤—É—Ö—à–∞–≥–æ–≤—ã–π API)
        conversation_id = conversation_manager.get_active_conversation_id(user_id)
        if not conversation_id:
            logger.info(f"No active conversation for user {user_id}")
            return False

        # 3. –ó–∞–≥—Ä—É–∑–∫–∞ —á–∞—Ç–∞
        conversation = conversation_manager.load_conversation(user_id, conversation_id)
        if not conversation or not conversation.messages:
            logger.info(f"Empty conversation for user {user_id}")
            return False

        # 4. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 200)
        messages = conversation.messages[-MAX_MESSAGES:]

        # 5. –†–µ–≤–µ—Ä—Å (–ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–≤—ã–º) - –±—ã—Å—Ç—Ä—ã–π –º–µ—Ç–æ–¥ [::-1]
        reversed_messages = messages[::-1]

        # 6. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        content = format_history_for_file(reversed_messages, conversation.metadata.title)

        # 7. –°–æ–∑–¥–∞–Ω–∏–µ BytesIO –æ–±—ä–µ–∫—Ç–∞
        content_bytes = content.encode('utf-8')
        file_obj = BytesIO(content_bytes)
        file_obj.name = f"history_{user_id}.txt"

        # 8. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ caption
        caption = (
            f"üìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ '{conversation.metadata.title}'\n"
            f"üìä –°–æ–æ–±—â–µ–Ω–∏–π: {len(messages)} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–≤—ã–º–∏)\n"
            f"üìÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )

        # 9. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
        await app.send_document(
            chat_id=user_id,
            document=file_obj,
            caption=caption,
            reply_markup=make_dialog_markup()
        )

        # 10. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ throttling
        update_last_sent(user_id, "history")

        logger.info(
            f"History file sent to user {user_id}: "
            f"{len(messages)} messages, {len(content_bytes)} bytes"
        )

        return True

    except Exception as e:
        logger.error(f"Error sending history file to user {user_id}: {e}", exc_info=True)
        return False

    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º BytesIO –æ–±—ä–µ–∫—Ç
        if file_obj:
            file_obj.close()


async def auto_send_reports_file(user_id: int, app: Client) -> bool:
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–∏–¥–µ .txt —Ñ–∞–π–ª–∞.

    –§—É–Ω–∫—Ü–∏—è:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç throttling (24 —á–∞—Å–∞ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
    2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ 200 —à—Ç—É–∫)
    3. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ—Ä–µ–∑ BytesIO
    5. –û–±–Ω–æ–≤–ª—è–µ—Ç throttling timestamp

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        app: Pyrogram –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    Returns:
        bool: True –µ—Å–ª–∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
              False –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å:
              - Throttling –∞–∫—Ç–∏–≤–µ–Ω (–Ω–µ –ø—Ä–æ—à–ª–æ 24 —á–∞—Å–∞)
              - –ù–µ—Ç –æ—Ç—á–µ—Ç–æ–≤
              - –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ

    Example:
        >>> await auto_send_reports_file(123456, app)
        True  # –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    Note:
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç BytesIO –≤–º–µ—Å—Ç–æ tempfile –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
        –û—Ç—á–µ—Ç—ã —É–∂–µ —Ä–µ–≤–µ—Ä—Å–Ω—É—Ç—ã (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏) –≤ get_user_reports().
    """
    file_obj = None

    try:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ throttling
        if not should_send_file(user_id, "reports"):
            logger.info(f"Skipping reports file for user {user_id} due to throttling")
            return False

        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ (—É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã: –Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        reports = md_storage_manager.get_user_reports(user_id, limit=MAX_REPORTS)

        if not reports:
            logger.info(f"No reports found for user {user_id}")
            return False

        # 3. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–æ—Ç—á–µ—Ç—ã —É–∂–µ —Ä–µ–≤–µ—Ä—Å–Ω—É—Ç—ã –≤ get_user_reports)
        content = format_reports_for_file(reports)

        # 4. –°–æ–∑–¥–∞–Ω–∏–µ BytesIO –æ–±—ä–µ–∫—Ç–∞
        content_bytes = content.encode('utf-8')
        file_obj = BytesIO(content_bytes)
        file_obj.name = f"reports_{user_id}.txt"

        # 5. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ caption
        caption = (
            f"üìã –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ç—á–µ—Ç–æ–≤\n"
            f"üìä –û—Ç—á–µ—Ç–æ–≤: {len(reports)} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–≤—ã–º–∏)\n"
            f"üìÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
        )

        # 6. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
        await app.send_document(
            chat_id=user_id,
            document=file_obj,
            caption=caption
        )

        # 7. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ throttling
        update_last_sent(user_id, "reports")

        logger.info(
            f"Reports file sent to user {user_id}: "
            f"{len(reports)} reports, {len(content_bytes)} bytes"
        )

        return True

    except Exception as e:
        logger.error(f"Error sending reports file to user {user_id}: {e}", exc_info=True)
        return False

    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º BytesIO –æ–±—ä–µ–∫—Ç
        if file_obj:
            file_obj.close()


# ============================================================================
#                           –ü–£–ë–õ–ò–ß–ù–´–ô API –ú–û–î–£–õ–Ø
# ============================================================================

__all__ = [
    'auto_send_history_file',
    'auto_send_reports_file',
    'format_history_for_file',
    'format_reports_for_file',
    'should_send_file',
    'update_last_sent',
]
