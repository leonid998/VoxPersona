"""
Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º.

–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:
- access_handlers.py - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º
- access_markups.py - UI —Ä–∞–∑–º–µ—Ç–∫–∞ (InlineKeyboardMarkup)

–ê–≤—Ç–æ—Ä: VoxPersona Team
–î–∞—Ç–∞: 17 –æ–∫—Ç—è–±—Ä—è 2025
–í–µ—Ä—Å–∏—è: 1.0
"""

from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Optional, Dict

# === –ö–û–ù–°–¢–ê–ù–¢–´ ===
BUTTON_BACK = "üîô –ù–∞–∑–∞–¥"
BUTTON_CANCEL = "¬´ –û—Ç–º–µ–Ω–∞"
BUTTON_CONFIRM = "‚úÖ –î–∞"
BUTTON_DECLINE = "‚ùå –ù–µ—Ç"

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –î–û–°–¢–£–ü–û–ú ===

def access_main_menu_markup() -> InlineKeyboardMarkup:
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º.

    –î–æ—Å—Ç—É–ø: –¢–æ–ª—å–∫–æ –¥–ª—è super_admin
    –ü—É—Ç—å: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Üí –°–∏—Å—Ç–µ–º–Ω–∞—è ‚Üí üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏        ", callback_data="access_users_menu")],
        [InlineKeyboardButton("        üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è        ", callback_data="access_invitations_menu")],
        [InlineKeyboardButton("        üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å        ", callback_data="access_security_menu")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="menu_system")]
    ])

# === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò ===

def access_users_menu_markup() -> InlineKeyboardMarkup:
    """
    –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.

    –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    - –ü–æ–∏—Å–∫ –ø–æ username/user_id
    - –§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º (super_admin, admin, user, guest)

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π        ", callback_data="access_list_users")],
        [InlineKeyboardButton("        üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è        ", callback_data="access_search_user")],
        [InlineKeyboardButton("        üé≠ –§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º        ", callback_data="access_filter_roles")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="menu_access")]
    ])

def access_user_list_markup(users: List[Dict], page: int, total_pages: int) -> InlineKeyboardMarkup:
    """
    –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (10 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É).

    –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: [—Å—Ç–∞—Ç—É—Å] [—Ä–æ–ª—å] Username
    - –°—Ç–∞—Ç—É—Å: ‚úÖ –∞–∫—Ç–∏–≤–µ–Ω / üö´ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
    - –†–æ–ª—å: üëë super_admin / ‚öôÔ∏è admin / üë§ user / üé≠ guest

    Args:
        users: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–º–∞–∫—Å 10)
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (1-based)
        total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü

    Returns:
        InlineKeyboardMarkup —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    buttons = []

    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user in users:
        # –≠–º–æ–¥–∑–∏ —Å—Ç–∞—Ç—É—Å–∞
        status_emoji = "‚úÖ" if user.get("is_active", True) else "üö´"

        # –≠–º–æ–¥–∑–∏ —Ä–æ–ª–∏
        role_emojis = {
            "super_admin": "üëë",
            "admin": "‚öôÔ∏è",
            "user": "üë§",
            "guest": "üé≠"
        }
        role_emoji = role_emojis.get(user.get("role", "user"), "üë§")

        # –§–æ—Ä–º–∞—Ç: [—Å—Ç–∞—Ç—É—Å] [—Ä–æ–ª—å] Username
        username = user.get("username", f"User_{user.get('user_id', 'Unknown')}")
        display_name = f"{status_emoji} {role_emoji} {username}"

        buttons.append([
            InlineKeyboardButton(
                display_name,
                callback_data=f"access_user_details||{user.get('user_id')}"
            )
        ])

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("  ‚¨ÖÔ∏è –ù–∞–∑–∞–¥  ", callback_data=f"access_list_users||page||{page-1}"))

    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    nav_buttons.append(InlineKeyboardButton(f"  {page}/{total_pages}  ", callback_data="access_page_info"))

    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("  –í–ø–µ—Ä—ë–¥ ‚û°Ô∏è  ", callback_data=f"access_list_users||page||{page+1}"))

    if nav_buttons:
        buttons.append(nav_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_users_menu")])

    return InlineKeyboardMarkup(buttons)

def access_user_details_markup(user_id: str) -> InlineKeyboardMarkup:
    """
    –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (—Ä–æ–ª—å, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
    - üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
    - üóë –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Args:
        user_id: Telegram user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å        ", callback_data=f"access_edit_user||{user_id}")],
        [InlineKeyboardButton("        üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å        ", callback_data=f"access_toggle_block||{user_id}")],
        [InlineKeyboardButton("        üóë –£–¥–∞–ª–∏—Ç—å        ", callback_data=f"access_delete_user_confirm||{user_id}")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_list_users")]
    ])

def access_edit_user_markup(user_id: str) -> InlineKeyboardMarkup:
    """
    –ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
    - üé≠ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å (super_admin/admin/user/guest)
    - ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (permissions)
    - üîë –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å

    Args:
        user_id: Telegram user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üé≠ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å        ", callback_data=f"access_change_role||{user_id}")],
        [InlineKeyboardButton("        ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏        ", callback_data=f"access_change_settings||{user_id}")],
        [InlineKeyboardButton("        üîë –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å        ", callback_data=f"access_reset_password||{user_id}")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data=f"access_user_details||{user_id}")]
    ])

def access_role_selection_markup(user_id: str) -> InlineKeyboardMarkup:
    """
    –í—ã–±–æ—Ä —Ä–æ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏:
    - üëë Super Admin (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)
    - ‚öôÔ∏è Admin (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤)
    - üë§ User (–±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø)
    - üé≠ Guest (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø)

    Args:
        user_id: Telegram user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        InlineKeyboardMarkup —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üëë Super Admin        ", callback_data=f"access_set_role||{user_id}||super_admin")],
        [InlineKeyboardButton("        ‚öôÔ∏è Admin        ", callback_data=f"access_set_role||{user_id}||admin")],
        [InlineKeyboardButton("        üë§ User        ", callback_data=f"access_set_role||{user_id}||user")],
        [InlineKeyboardButton("        üé≠ Guest        ", callback_data=f"access_set_role||{user_id}||guest")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data=f"access_edit_user||{user_id}")]
    ])

def access_filter_roles_markup() -> InlineKeyboardMarkup:
    """
    –§–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª—è–º.

    –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏:
    - üåê –í—Å–µ (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞)
    - üëë Super Admin
    - ‚öôÔ∏è Admin
    - üë§ User
    - üé≠ Guest

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üåê –í—Å–µ        ", callback_data="access_filter||all")],
        [InlineKeyboardButton("        üëë Super Admin        ", callback_data="access_filter||super_admin")],
        [InlineKeyboardButton("        ‚öôÔ∏è Admin        ", callback_data="access_filter||admin")],
        [InlineKeyboardButton("        üë§ User        ", callback_data="access_filter||user")],
        [InlineKeyboardButton("        üé≠ Guest        ", callback_data="access_filter||guest")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_users_menu")]
    ])

# === –ü–†–ò–ì–õ–ê–®–ï–ù–ò–Ø ===

def access_invitations_menu_markup() -> InlineKeyboardMarkup:
    """
    –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏.

    –§—É–Ω–∫—Ü–∏–∏:
    - –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è Admin/User
    - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    - –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        ‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (Admin)        ", callback_data="access_create_invite||admin")],
        [InlineKeyboardButton("        ‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (User)        ", callback_data="access_create_invite||user")],
        [InlineKeyboardButton("        üìã –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π        ", callback_data="access_list_invites")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="menu_access")]
    ])

def access_invite_list_markup(invites: List[Dict], page: int, total_pages: int) -> InlineKeyboardMarkup:
    """
    –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (10 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É).

    –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: [—Ä–æ–ª—å] Code... (–¥–æ YYYY-MM-DD)

    Args:
        invites: –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (1-based)
        total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü

    Returns:
        InlineKeyboardMarkup —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Å–ø–∏—Å–∫–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    """
    buttons = []

    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    for invite in invites:
        # –≠–º–æ–¥–∑–∏ —Ä–æ–ª–∏
        role_emojis = {
            "admin": "‚öôÔ∏è",
            "user": "üë§",
            "guest": "üé≠"
        }
        role_emoji = role_emojis.get(invite.get("role", "user"), "üë§")

        # –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (YYYY-MM-DD)
        expires_at = invite.get("expires_at", "N/A")
        if expires_at and expires_at != "N/A":
            try:
                # –ï—Å–ª–∏ datetime, –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É
                expires_at = expires_at.split()[0] if " " in str(expires_at) else expires_at
            except:
                expires_at = "N/A"

        # –ö–æ—Ä–æ—Ç–∫–∏–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤)
        invite_code = invite.get("invite_code", "Unknown")
        short_code = invite_code[:8] + "..." if len(invite_code) > 8 else invite_code

        # –§–æ—Ä–º–∞—Ç: [—Ä–æ–ª—å] Code... (–¥–æ YYYY-MM-DD)
        display_name = f"{role_emoji} {short_code} (–¥–æ {expires_at})"

        buttons.append([
            InlineKeyboardButton(
                display_name,
                callback_data=f"access_invite_details||{invite_code}"
            )
        ])

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("  ‚¨ÖÔ∏è –ù–∞–∑–∞–¥  ", callback_data=f"access_list_invites||page||{page-1}"))

    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    nav_buttons.append(InlineKeyboardButton(f"  {page}/{total_pages}  ", callback_data="access_page_info"))

    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("  –í–ø–µ—Ä—ë–¥ ‚û°Ô∏è  ", callback_data=f"access_list_invites||page||{page+1}"))

    if nav_buttons:
        buttons.append(nav_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_invitations_menu")])

    return InlineKeyboardMarkup(buttons)

def access_invite_details_markup(invite_code: str) -> InlineKeyboardMarkup:
    """
    –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏.

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
    - üóë –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ

    Args:
        invite_code: –ö–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üóë –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å        ", callback_data=f"access_revoke_invite||{invite_code}")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_list_invites")]
    ])

def access_invite_type_markup() -> InlineKeyboardMarkup:
    """
    –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è).

    –¢–∏–ø—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:
    - ‚öôÔ∏è Admin (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤)
    - üë§ User (–±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º)

    Returns:
        InlineKeyboardMarkup —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        ‚öôÔ∏è –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è Admin        ", callback_data="access_create_invite||admin")],
        [InlineKeyboardButton("        üë§ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è User        ", callback_data="access_create_invite||user")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_invitations_menu")]
    ])

# === –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ ===

def access_security_menu_markup() -> InlineKeyboardMarkup:
    """
    –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.

    –§—É–Ω–∫—Ü–∏–∏:
    - üìú –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π (audit log)
    - üïí –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    - üîê –ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        üìú –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π        ", callback_data="access_audit_log")],
        [InlineKeyboardButton("        üïí –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π        ", callback_data="access_cleanup_settings")],
        [InlineKeyboardButton("        üîê –ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª–µ–π        ", callback_data="access_password_policy")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="menu_access")]
    ])

def access_audit_log_markup(page: int, total_pages: int) -> InlineKeyboardMarkup:
    """
    –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π (20 –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É).

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:
    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    - –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    - –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π

    Args:
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (1-based)
        total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü

    Returns:
        InlineKeyboardMarkup —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    """
    buttons = []

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("  ‚¨ÖÔ∏è –ù–∞–∑–∞–¥  ", callback_data=f"access_audit_log||page||{page-1}"))

    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    nav_buttons.append(InlineKeyboardButton(f"  {page}/{total_pages}  ", callback_data="access_page_info"))

    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("  –í–ø–µ—Ä—ë–¥ ‚û°Ô∏è  ", callback_data=f"access_audit_log||page||{page+1}"))

    if nav_buttons:
        buttons.append(nav_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_security_menu")])

    return InlineKeyboardMarkup(buttons)

# === –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ï –†–ê–ó–ú–ï–¢–ö–ò ===

def access_confirm_action_markup(confirm_callback: str, cancel_callback: str = "menu_access") -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:
    - –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è

    Args:
        confirm_callback: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–∞"
        cancel_callback: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞" (default: menu_access)

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    """
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton(f"    {BUTTON_CONFIRM}    ", callback_data=confirm_callback),
            InlineKeyboardButton(f"    {BUTTON_DECLINE}    ", callback_data=cancel_callback)
        ]
    ])

def access_back_markup(return_to: str = "menu_access") -> InlineKeyboardMarkup:
    """
    –ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥".

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤.

    Args:
        return_to: callback_data –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ (default: menu_access)

    Returns:
        InlineKeyboardMarkup —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data=return_to)]
    ])

def access_cancel_markup(cancel_callback: str) -> InlineKeyboardMarkup:
    """
    –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –¥–ª—è FSM –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö:
    - –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    - –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫

    Args:
        cancel_callback: callback_data –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(f"    {BUTTON_CANCEL}    ", callback_data=cancel_callback)]
    ])

def access_pagination_markup(page: int, total_pages: int, prefix: str, back_to: str) -> InlineKeyboardMarkup:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è –ª—é–±—ã—Ö —Å–ø–∏—Å–∫–æ–≤.

    –°–æ–∑–¥–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é:
    - [‚¨ÖÔ∏è –ù–∞–∑–∞–¥] [X/Y] [–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è]
    - [üîô –ù–∞–∑–∞–¥]

    Args:
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (1-based)
        total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        prefix: –ü—Ä–µ—Ñ–∏–∫—Å callback_data (–Ω–∞–ø—Ä–∏–º–µ—Ä, "access_list_users")
        back_to: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"

    Returns:
        InlineKeyboardMarkup —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    """
    buttons = []

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton("  ‚¨ÖÔ∏è –ù–∞–∑–∞–¥  ", callback_data=f"{prefix}||page||{page-1}"))

    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    nav_buttons.append(InlineKeyboardButton(f"  {page}/{total_pages}  ", callback_data="access_page_info"))

    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton("  –í–ø–µ—Ä—ë–¥ ‚û°Ô∏è  ", callback_data=f"{prefix}||page||{page+1}"))

    if nav_buttons:
        buttons.append(nav_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    buttons.append([InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data=back_to)])

    return InlineKeyboardMarkup(buttons)

# === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ê–ó–ú–ï–¢–ö–ò ===

def access_search_result_markup(found_users: List[Dict]) -> InlineKeyboardMarkup:
    """
    –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–∞–∫—Å–∏–º—É–º 10):
    - [—Å—Ç–∞—Ç—É—Å] [—Ä–æ–ª—å] Username

    Args:
        found_users: –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    Returns:
        InlineKeyboardMarkup —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    """
    buttons = []

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    for user in found_users[:10]:
        # –≠–º–æ–¥–∑–∏ —Å—Ç–∞—Ç—É—Å–∞
        status_emoji = "‚úÖ" if user.get("is_active", True) else "üö´"

        # –≠–º–æ–¥–∑–∏ —Ä–æ–ª–∏
        role_emojis = {
            "super_admin": "üëë",
            "admin": "‚öôÔ∏è",
            "user": "üë§",
            "guest": "üé≠"
        }
        role_emoji = role_emojis.get(user.get("role", "user"), "üë§")

        # –§–æ—Ä–º–∞—Ç: [—Å—Ç–∞—Ç—É—Å] [—Ä–æ–ª—å] Username
        username = user.get("username", f"User_{user.get('user_id', 'Unknown')}")
        display_name = f"{status_emoji} {role_emoji} {username}"

        buttons.append([
            InlineKeyboardButton(
                display_name,
                callback_data=f"access_user_details||{user.get('user_id')}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_users_menu")])

    return InlineKeyboardMarkup(buttons)

def access_cleanup_settings_markup() -> InlineKeyboardMarkup:
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    –§—É–Ω–∫—Ü–∏–∏:
    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è (1-48 —á–∞—Å–æ–≤)
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è

    Returns:
        InlineKeyboardMarkup —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏
    """
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("        ‚è± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è (1-48 —á)        ", callback_data="access_set_cleanup_hours")],
        [InlineKeyboardButton("        üë• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π        ", callback_data="access_cleanup_per_user")],
        [InlineKeyboardButton("        üìÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è        ", callback_data="access_view_cleanup_schedule")],
        [InlineKeyboardButton(f"        {BUTTON_BACK}        ", callback_data="access_security_menu")]
    ])
