from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datamodels import mapping_scenario_names
from constants import BUTTON_BACK, BUTTON_BACK_WITH_ARROW
from conversation_manager import conversation_manager
from conversations import ConversationMetadata

def main_menu_markup():
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üí¨ –†–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞", callback_data="menu_dialog"),
            InlineKeyboardButton("üì± –ß–∞—Ç—ã", callback_data="menu_chats")
        ],
        [
            InlineKeyboardButton("‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞—è", callback_data="menu_system"),
            InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="menu_help")
        ]
    ])

def storage_menu_markup():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("–ê—É–¥–∏–æ —Ñ–∞–π–ª—ã", callback_data="view||audio")],
        [InlineKeyboardButton(BUTTON_BACK, callback_data="menu_system")]
    ])

def system_menu_markup():
    """–ú–µ–Ω—é —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìÅ –•—Ä–∞–Ω–∏–ª–∏—â–µ", callback_data="menu_storage")],
        [InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")]
    ])

def create_chat_button_row(conv: ConversationMetadata, is_active: bool) -> list:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞ —Å –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏ 60%/20%/20%.

    Args:
        conv: –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞
        is_active: True –µ—Å–ª–∏ —ç—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç

    Returns:
        List –∏–∑ 3 InlineKeyboardButton
    """
    emoji = "üìù" if is_active else "üí¨"

    # –û–±—Ä–µ–∑–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ 25 —Å–∏–º–≤–æ–ª–æ–≤
    name = conv.title
    if len(name) > 25:
        name = name[:22] + "..."

    return [
        InlineKeyboardButton(f"{emoji} {name}", callback_data=f"switch_chat||{conv.conversation_id}"),
        InlineKeyboardButton("‚úèÔ∏è", callback_data=f"rename_chat||{conv.conversation_id}"),
        InlineKeyboardButton("üóëÔ∏è", callback_data=f"delete_chat||{conv.conversation_id}")
    ]

def chats_menu_markup_dynamic(user_id: int) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é –ß–∞—Ç—ã —Å —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
    - –°—Ç—Ä–æ–∫–∞ 1: [üÜï –ù–æ–≤—ã–π —á–∞—Ç] [¬´ –ù–∞–∑–∞–¥]
    - –°—Ç—Ä–æ–∫–∞ 2: [üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞] [üìÑ –ú–æ–∏ –æ—Ç—á–µ—Ç—ã]
    - –°—Ç—Ä–æ–∫–∞ 3: –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç (üìù —ç–º–æ–¥–∑–∏)
    - –°—Ç—Ä–æ–∫–∞ 4+: –û—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Ç—ã (üí¨ —ç–º–æ–¥–∑–∏) –ø–æ updated_at DESC

    –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏ —á–∞—Ç–∞: [60% –Ω–∞–∑–≤–∞–Ω–∏–µ] [20% ‚úèÔ∏è] [20% üóëÔ∏è]
    """
    # –°—Ç–∞—Ç–∏—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    buttons = [
        [
            InlineKeyboardButton("üÜï –ù–æ–≤—ã–π —á–∞—Ç", callback_data="new_chat"),
            InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats"),
            InlineKeyboardButton("üìÑ –ú–æ–∏ –æ—Ç—á–µ—Ç—ã", callback_data="show_my_reports")
        ]
    ]

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    conversations = conversation_manager.list_conversations(user_id)

    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
    active_chat = None
    other_chats = []

    for conv in conversations:
        if conv.is_active:
            active_chat = conv
        else:
            other_chats.append(conv)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Ç—ã –ø–æ updated_at DESC
    other_chats.sort(key=lambda x: x.updated_at, reverse=True)

    # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if active_chat:
        buttons.append(create_chat_button_row(active_chat, True))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Ç—ã
    for conv in other_chats:
        buttons.append(create_chat_button_row(conv, False))

    return InlineKeyboardMarkup(buttons)

def switch_chat_confirmation_markup(conversation_id: str, chat_name: str) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞."""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –î–∞, –ø–µ—Ä–µ–π—Ç–∏", callback_data=f"confirm_switch||{conversation_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="menu_chats")
        ]
    ])

def delete_chat_confirmation_markup(conversation_id: str, chat_name: str) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞."""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete||{conversation_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="menu_chats")
        ]
    ])

def chats_menu_markup():
    """–ú–µ–Ω—é –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤"""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üÜï –ù–æ–≤—ã–π —á–∞—Ç", callback_data="new_chat"),
            InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="show_stats"),
            InlineKeyboardButton("üìÑ –ú–æ–∏ –æ—Ç—á–µ—Ç—ã", callback_data="show_my_reports")
        ]
    ])

def confirm_menu_markup(mode: str, file_number: int,  employee: str, building_type: str, place: str, date: str, city: str, zone_name: str, client: str):
    "–ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö"
    text_summary = (
            f"**–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö**\n\n"
            f"**–°—Ü–µ–Ω–∞—Ä–∏–π**: {mapping_scenario_names[mode]}\n"
            f"**–ù–æ–º–µ—Ä —Ñ–∞–π–ª–∞**: {file_number}\n"
            f"**–î–∞—Ç–∞**: {date}\n"
            f"**–§–ò–û –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞**: {employee}\n"
            f"**–ó–∞–≤–µ–¥–µ–Ω–∏–µ**: {place}\n"
            f"**–¢–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è**: {building_type}\n"
            f"**–ó–æ–Ω–∞**: {zone_name}\n"
        )

    if city:
        text_summary += f"**–ì–æ—Ä–æ–¥**: {city}\n\n"
    if client:
        text_summary += f"**–§–ò–û –ö–ª–∏–µ–Ω—Ç–∞**: {client}\n\n"

    text_summary += "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å?"

    kb = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_data"),
            InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="edit_data")
        ]
    ])

    return kb, text_summary

def edit_menu_markup(mode: str):
    "–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"

    markups = [
        [InlineKeyboardButton("–ù–æ–º–µ—Ä —Ñ–∞–π–ª–∞", callback_data="edit_audio_number")],
        [InlineKeyboardButton("–î–∞—Ç–∞", callback_data="edit_date")],
        [InlineKeyboardButton("–§–ò–û –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", callback_data="edit_employee")],
        [InlineKeyboardButton("–ó–∞–≤–µ–¥–µ–Ω–∏–µ", callback_data="edit_place_name")],
        [InlineKeyboardButton("–¢–∏–ø –∑–∞–≤–µ–¥–µ–Ω–∏—è", callback_data="edit_building_type")],
        [InlineKeyboardButton("–ó–æ–Ω–∞", callback_data="edit_zone_name")],
    ]

    if mode == "design":
        markups.append([InlineKeyboardButton("–ì–æ—Ä–æ–¥", callback_data="edit_city")])
    else:
        markups.append([InlineKeyboardButton("–§–ò–û –ö–ª–∏–µ–Ω—Ç–∞", callback_data="edit_client")],)

    markups.append([InlineKeyboardButton(BUTTON_BACK_WITH_ARROW, callback_data="back_to_confirm")])

    kb = InlineKeyboardMarkup(markups)
    return kb

def make_dialog_markup() -> InlineKeyboardMarkup:
    """
    –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –ø–æ–∏—Å–∫–∞.

    –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
    - –°—Ç—Ä–æ–∫–∞ 1: [–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫] [–ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ]
    - –°—Ç—Ä–æ–∫–∞ 2: [–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é]
    """
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫", callback_data="mode_fast"),
            InlineKeyboardButton("üî¨ –ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", callback_data="mode_deep")
        ],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu_main")]
    ])

def help_menu_markup():
    text_ = (
        "–ë–æ—Ç –∏–º–µ–µ—Ç –¥–≤–∞ —Ä–µ–∂–∏–º–∞: '–•—Ä–∞–Ω–∏–ª–∏—â–µ' –∏ '–†–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞'\n\n"
        "–í —Ä–µ–∂–∏–º–µ '–•—Ä–∞–Ω–∏–ª–∏—â–µ' –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∞—É–¥–∏–æ, –æ–Ω–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç—á–µ—Ç—ã\n\n"
        "–í —Ä–µ–∂–∏–º–µ –¥–∏–∞–ª–æ–≥–∞ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –±–æ—Ç—É —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n\n"
        "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á—ë—Ç–æ–≤:\n\n"
        "–ò–ù–¢–ï–†–í–¨–Æ:\n"
        "1) –û—Ü–µ–Ω–∫–∞ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∏–Ω—Ç–µ—Ä–≤—å—é\n"
        "2) –û—Ç—á—ë—Ç –æ —Å–≤—è–∑–∫–∞—Ö (–∫–∞—á–µ—Å—Ç–≤–æ-–ø—Ä–∏–Ω—è—Ç–∏–µ)\n"
        "3) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—â–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∞—Ö\n"
        "4) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∫—Ç–æ—Ä–∞—Ö –≤ —ç—Ç–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏\n"
        "5) –ê–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞\n\n"
        "–î–ò–ó–ê–ô–ù:\n"
        "1) –û—Ü–µ–Ω–∫–∞ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∞—É–¥–∏—Ç–∞\n"
        "2) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ (–∞–≤—Ç–æ)\n"
        "3) –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á—ë—Ç (–∞–≤—Ç–æ)\n\n"
        "–ú–∞–∫—Å 2 –ì–ë, –±–µ–∑ ffmpeg."
    )
    kb = InlineKeyboardMarkup([[InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")]])
    return kb, text_

def interview_or_design_menu():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞: –ò–ù–¢–ï–†–í–¨–Æ / –î–ò–ó–ê–ô–ù."""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("–ò–ù–¢–ï–†–í–¨–Æ", callback_data="mode_interview"),
            InlineKeyboardButton("–î–ò–ó–ê–ô–ù", callback_data="mode_design"),
            InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")
        ]
    ])

def building_type_menu_markup():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–¥–∞–Ω–∏—è"""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("–û—Ç–µ–ª—å", callback_data="choose_building||hotel"),
            InlineKeyboardButton("–†–µ—Å—Ç–æ—Ä–∞–Ω", callback_data="choose_building||restaurant"),
            InlineKeyboardButton("–¶–µ–Ω—Ç—Ä –∑–¥–æ—Ä–æ–≤—å—è", callback_data="choose_building||spa"),
        ]
    ])

def interview_menu_markup():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("1) –û—Ü–µ–Ω–∫–∞ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∏–Ω—Ç–µ—Ä–≤—å—é", callback_data="report_int_methodology")],
        [InlineKeyboardButton("2) –û—Ç—á–µ—Ç –æ —Å–≤—è–∑–∫–∞—Ö", callback_data="report_int_links")],
        [InlineKeyboardButton("3) –û–±—â–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã", callback_data="report_int_general")],
        [InlineKeyboardButton("4) –§–∞–∫—Ç–æ—Ä—ã –≤ —ç—Ç–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏", callback_data="report_int_specific")],
        [InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")]
    ])

def design_menu_markup():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("1) –û—Ü–µ–Ω–∫–∞ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ –∞—É–¥–∏—Ç–∞", callback_data="report_design_audit_methodology")],
        [InlineKeyboardButton("2) –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–µ –∞—É–¥–∏—Ç–∞", callback_data="report_design_compliance")],
        [InlineKeyboardButton("3) –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –∞—É–¥–∏—Ç–∞", callback_data="report_design_structured")],
        [InlineKeyboardButton(BUTTON_BACK, callback_data="menu_main")]
    ])
