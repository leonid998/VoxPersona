"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ConversationManager.
–ó–∞–ø—É—Å–∫: python test_conversation_manager.py
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from conversation_manager import conversation_manager
from conversations import ConversationMessage


def test_basic_workflow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏."""

    print("\n" + "="*60)
    print("–¢–ï–°–¢: –ë–∞–∑–æ–≤—ã–π workflow –º—É–ª—å—Ç–∏—á–∞—Ç–æ–≤")
    print("="*60)

    user_id = 12345
    username = "test_user"

    # 1. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —á–∞—Ç–∞...")
    conv_id_1 = conversation_manager.create_conversation(
        user_id=user_id,
        username=username,
        first_question="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏–∑ –æ—Ç–µ–ª—è –ú–æ—Å–∫–≤–∞"
    )
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç ID: {conv_id_1}")

    # 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–µ—Ä–≤—ã–π —á–∞—Ç
    print("\n2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–µ—Ä–≤—ã–π —á–∞—Ç...")
    msg1 = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=1,
        type="user_question",
        text="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏–∑ –æ—Ç–µ–ª—è –ú–æ—Å–∫–≤–∞",
        tokens=150
    )
    msg2 = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=2,
        type="bot_answer",
        text="–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω. –ö–ª–∏–µ–Ω—Ç –¥–æ–≤–æ–ª–µ–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º.",
        tokens=200,
        sent_as="message"
    )

    conversation_manager.add_message(user_id, conv_id_1, msg1)
    conversation_manager.add_message(user_id, conv_id_1, msg2)
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 2 —Å–æ–æ–±—â–µ–Ω–∏—è")

    # 3. –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π —á–∞—Ç
    print("\n3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —á–∞—Ç–∞...")
    conv_id_2 = conversation_manager.create_conversation(
        user_id=user_id,
        username=username,
        first_question="–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤?"
    )
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —á–∞—Ç ID: {conv_id_2}")

    # 4. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ –≤—Ç–æ—Ä–æ–π —á–∞—Ç
    print("\n4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ –≤—Ç–æ—Ä–æ–π —á–∞—Ç...")
    msg3 = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=3,
        type="user_question",
        text="–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤?",
        tokens=100
    )
    conversation_manager.add_message(user_id, conv_id_2, msg3)
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 1 —Å–æ–æ–±—â–µ–Ω–∏–µ")

    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤
    print("\n5. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    conversations = conversation_manager.list_conversations(user_id)
    for conv in conversations:
        print(f"   - {conv.name}")
        print(f"     ID: {conv.conversation_id}")
        print(f"     –°–æ–æ–±—â–µ–Ω–∏–π: {conv.message_count}, –¢–æ–∫–µ–Ω–æ–≤: {conv.total_tokens}")
        print(f"     –ê–∫—Ç–∏–≤–Ω—ã–π: {'–î–∞' if conv.is_active else '–ù–µ—Ç'}")
        print(f"     –°–æ–∑–¥–∞–Ω: {conv.created_at}")

    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    print("\n6. –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç:")
    active_id = conversation_manager.get_active_conversation_id(user_id)
    print(f"   ‚úÖ ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞: {active_id}")
    print(f"   ‚úÖ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Ç–æ—Ä–æ–π: {active_id == conv_id_2}")

    # 7. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π —á–∞—Ç
    print("\n7. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–≤—ã–π —á–∞—Ç...")
    conversation_manager.set_active_conversation(user_id, conv_id_1)
    active_id = conversation_manager.get_active_conversation_id(user_id)
    print(f"   ‚úÖ –ù–æ–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: {active_id}")
    print(f"   ‚úÖ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–π: {active_id == conv_id_1}")

    # 8. –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —á–∞—Ç–∞
    print("\n8. –°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —á–∞—Ç–∞:")
    messages = conversation_manager.get_messages(user_id, conv_id_1)
    for i, msg in enumerate(messages, 1):
        print(f"   {i}. [{msg.type}] {msg.text[:50]}...")
        print(f"      –¢–æ–∫–µ–Ω–æ–≤: {msg.tokens}")

    # 9. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª–Ω—ã–π —á–∞—Ç
    print("\n9. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —á–∞—Ç–∞:")
    conversation = conversation_manager.load_conversation(user_id, conv_id_1)
    if conversation:
        print(f"   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: {conversation.metadata.name}")
        print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–π: {len(conversation.messages)}")
        print(f"   ‚úÖ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {conversation.metadata.total_tokens}")

    # 10. –£–¥–∞–ª—è–µ–º –≤—Ç–æ—Ä–æ–π —á–∞—Ç
    print("\n10. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —á–∞—Ç–∞...")
    conversation_manager.delete_conversation(user_id, conv_id_2)
    conversations = conversation_manager.list_conversations(user_id)
    print(f"   ‚úÖ –û—Å—Ç–∞–ª–æ—Å—å —á–∞—Ç–æ–≤: {len(conversations)}")

    print("\n" + "="*60)
    print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û")
    print("="*60 + "\n")


def test_index_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É index.json."""

    print("\n" + "="*60)
    print("–¢–ï–°–¢: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ index.json")
    print("="*60)

    user_id = 99999
    username = "index_test_user"

    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Ç–æ–≤
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ 3 —á–∞—Ç–æ–≤...")
    conv_ids = []
    questions = [
        "–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä–æ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ",
        "–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –ø–æ—Ç–æ–º—É —á—Ç–æ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –±—É–∫–≤"
    ]

    for q in questions:
        conv_id = conversation_manager.create_conversation(user_id, username, q)
        conv_ids.append(conv_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞:")
    index = conversation_manager.load_index(user_id)

    print(f"   User ID: {index['user_id']}")
    print(f"   Username: {index['username']}")
    print(f"   Last active: {index['last_active_conversation_id']}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Ç–æ–≤: {len(index['conversations'])}")

    print("\n3. –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å–µ:")
    for i, conv in enumerate(index['conversations'], 1):
        print(f"   {i}. {conv['name']}")
        print(f"      Active: {conv['is_active']}")

    # –û—á–∏—Å—Ç–∫–∞
    print("\n4. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    for conv_id in conv_ids:
        conversation_manager.delete_conversation(user_id, conv_id)

    print("\n" + "="*60)
    print("‚úÖ –¢–ï–°–¢ –°–¢–†–£–ö–¢–£–†–´ –ó–ê–í–ï–†–®–ï–ù")
    print("="*60 + "\n")


if __name__ == "__main__":
    try:
        test_basic_workflow()
        test_index_structure()

        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û –ü–†–û–ô–î–ï–ù–´! üéâ\n")
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}\n")
        import traceback
        traceback.print_exc()
