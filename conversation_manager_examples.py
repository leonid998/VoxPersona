"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ConversationManager –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö VoxPersona –±–æ—Ç–∞.
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from conversation_manager import conversation_manager
from conversations import ConversationMessage


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# ============================================================================

def handle_first_message_from_new_user():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ø–µ—Ä–≤—ã–µ –ø–∏—à–µ—Ç –±–æ—Ç—É.
    –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —á–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 1: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("="*60)

    # –î–∞–Ω–Ω—ã–µ –æ—Ç Telegram
    user_id = 12345
    username = "new_user"
    user_message = "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏–∑ –æ—Ç–µ–ª—è –ú–æ—Å–∫–≤–∞"
    telegram_msg_id = 100

    # 1. –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç (–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    conv_id = conversation_manager.create_conversation(
        user_id=user_id,
        username=username,
        first_question=user_message
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–µ—Ä–≤—ã–π —á–∞—Ç ID: {conv_id}")

    # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_msg = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=telegram_msg_id,
        type="user_question",
        text=user_message,
        tokens=150,  # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å —á–µ—Ä–µ–∑ tiktoken
        search_type="fast"
    )
    conversation_manager.add_message(user_id, conv_id, user_msg)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    # 3. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    bot_answer = "–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω. –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–∞: ..."
    bot_msg = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=telegram_msg_id + 1,
        type="bot_answer",
        text=bot_answer,
        tokens=500,
        sent_as="message"  # –∏–ª–∏ "file" –µ—Å–ª–∏ –¥–ª–∏–Ω–Ω—ã–π
    )
    conversation_manager.add_message(user_id, conv_id, bot_msg)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –æ—Ç–≤–µ—Ç –±–æ—Ç–∞")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    conversation = conversation_manager.load_conversation(user_id, conv_id)
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {conversation.metadata.name}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–π: {conversation.metadata.message_count}")
    print(f"   –¢–æ–∫–µ–Ω–æ–≤: {conversation.metadata.total_tokens}")


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 2: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ
# ============================================================================

def handle_continuation_of_dialog():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 2: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞")
    print("="*60)

    user_id = 12345

    # 1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    active_id = conversation_manager.get_active_conversation_id(user_id)
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: {active_id}")

    # 2. –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –≤—Å–µ) - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    if not active_id:
        print("‚ö†Ô∏è  –ê–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...")
        active_id = conversation_manager.create_conversation(
            user_id=user_id,
            username="new_user",
            first_question="–ù–æ–≤—ã–π —á–∞—Ç"
        )

    # 3. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    new_question = "–ö–∞–∫–∏–µ –µ—â–µ –ø—Ä–æ–±–ª–µ–º—ã –±—ã–ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞?"
    msg = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=200,
        type="user_question",
        text=new_question,
        tokens=100
    )
    conversation_manager.add_message(user_id, active_id, msg)
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç")


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –Ω–æ–≤—É—é —Ç–µ–º—É)
# ============================================================================

def handle_new_chat_creation():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç –¥–ª—è –Ω–æ–≤–æ–π —Ç–µ–º—ã.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞")
    print("="*60)

    user_id = 12345
    username = "new_user"

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ù–æ–≤—ã–π —á–∞—Ç"
    new_question = "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏–Ω—Ç–µ—Ä–≤—å—é"

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç (—Å—Ç–∞—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º)
    new_conv_id = conversation_manager.create_conversation(
        user_id=user_id,
        username=username,
        first_question=new_question
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —á–∞—Ç ID: {new_conv_id}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    conversations = conversation_manager.list_conversations(user_id)
    print(f"\nüìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ({len(conversations)} —à—Ç):")
    for i, conv in enumerate(conversations, 1):
        active_mark = "üîµ" if conv.is_active else "‚ö™"
        print(f"   {active_mark} {i}. {conv.name}")
        print(f"      –°–æ–æ–±—â–µ–Ω–∏–π: {conv.message_count}, –¢–æ–∫–µ–Ω–æ–≤: {conv.total_tokens}")


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 4: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏
# ============================================================================

def handle_chat_switching():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —á–∞—Ç–∞–º–∏.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 4: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏")
    print("="*60)

    user_id = 12345

    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    conversations = conversation_manager.list_conversations(user_id)
    print(f"\nüìã –í–∞—à–∏ —á–∞—Ç—ã:")
    for i, conv in enumerate(conversations, 1):
        active_mark = "üîµ" if conv.is_active else "‚ö™"
        print(f"{active_mark} {i}. {conv.name} ({conv.message_count} —Å–æ–æ–±—â–µ–Ω–∏–π)")

    # 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —á–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤—ã–π)
    if len(conversations) > 0:
        selected_conv = conversations[0]
        print(f"\nüëâ –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ —á–∞—Ç: {selected_conv.name}")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π
        conversation_manager.set_active_conversation(
            user_id=user_id,
            conversation_id=selected_conv.conversation_id
        )
        print(f"‚úÖ –ß–∞—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º
        active_id = conversation_manager.get_active_conversation_id(user_id)
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Ç–µ–ø–µ—Ä—å: {active_id}")


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 5: –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞
# ============================================================================

def handle_chat_deletion():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç –æ–¥–∏–Ω –∏–∑ —Å–≤–æ–∏—Ö —á–∞—Ç–æ–≤.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 5: –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞")
    print("="*60)

    user_id = 12345

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    conversations = conversation_manager.list_conversations(user_id)
    print(f"\nüìã –ß–∞—Ç–æ–≤ –¥–æ —É–¥–∞–ª–µ–Ω–∏—è: {len(conversations)}")

    if len(conversations) > 1:
        # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Ç
        last_conv = conversations[-1]
        print(f"üóëÔ∏è  –£–¥–∞–ª—è—é —á–∞—Ç: {last_conv.name}")

        conversation_manager.delete_conversation(
            user_id=user_id,
            conversation_id=last_conv.conversation_id
        )
        print(f"‚úÖ –ß–∞—Ç —É–¥–∞–ª–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        conversations = conversation_manager.list_conversations(user_id)
        print(f"üìã –ß–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {len(conversations)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        active_id = conversation_manager.get_active_conversation_id(user_id)
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: {active_id}")


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è LLM
# ============================================================================

def get_context_for_llm():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Claude.
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è LLM")
    print("="*60)

    user_id = 12345

    # 1. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    active_id = conversation_manager.get_active_conversation_id(user_id)

    # 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
    messages = conversation_manager.get_messages(
        user_id=user_id,
        conversation_id=active_id,
        limit=10
    )
    print(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")

    # 3. –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è Claude API
    context = []
    for msg in messages:
        role = "user" if msg.type == "user_question" else "assistant"
        context.append({
            "role": role,
            "content": msg.text
        })

    print(f"\nüí¨ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è Claude ({len(context)} —Å–æ–æ–±—â–µ–Ω–∏–π):")
    for i, msg_dict in enumerate(context, 1):
        role_emoji = "üë§" if msg_dict["role"] == "user" else "ü§ñ"
        preview = msg_dict["content"][:50] + "..." if len(msg_dict["content"]) > 50 else msg_dict["content"]
        print(f"   {role_emoji} {i}. {preview}")

    return context


# ============================================================================
# –ü—Ä–∏–º–µ—Ä 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–∏—Å–∫–æ–º (fast/deep)
# ============================================================================

def handle_message_with_search():
    """
    –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å —Å –ø–æ–∏—Å–∫–æ–º (fast –∏–ª–∏ deep).
    """
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† 7: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–∏—Å–∫–æ–º")
    print("="*60)

    user_id = 12345
    active_id = conversation_manager.get_active_conversation_id(user_id)

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "Fast Search"
    user_question = "–ö–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –±—ã–ª–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–Ω—Ç–µ—Ä–≤—å—é?"
    search_type = "fast"  # –∏–ª–∏ "deep"

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å —Å —Ç–∏–ø–æ–º –ø–æ–∏—Å–∫–∞
    msg = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=300,
        type="user_question",
        text=user_question,
        tokens=120,
        search_type=search_type
    )
    conversation_manager.add_message(user_id, active_id, msg)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤–æ–ø—Ä–æ—Å —Å –ø–æ–∏—Å–∫–æ–º: {search_type}")

    # –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –¥–ª–∏–Ω–Ω—ã–π - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ —Ñ–∞–π–ª
    bot_answer = "–î–ª–∏–Ω–Ω—ã–π –æ—Ç—á–µ—Ç..." * 100
    file_path = "/home/voxpersona_user/VoxPersona/md_reports/report_300.md"

    answer_msg = ConversationMessage(
        timestamp=datetime.now().isoformat(),
        message_id=301,
        type="bot_answer",
        text=bot_answer[:300] + "... (—Å–º. —Ñ–∞–π–ª)",  # Preview
        tokens=5000,
        sent_as="file",
        file_path=file_path
    )
    conversation_manager.add_message(user_id, active_id, answer_msg)
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –æ—Ç–≤–µ—Ç (–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–∞–∫ —Ñ–∞–π–ª)")


# ============================================================================
# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
# ============================================================================

if __name__ == "__main__":
    print("\nüöÄ –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø CONVERSATION MANAGER\n")

    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
        handle_first_message_from_new_user()
        handle_continuation_of_dialog()
        handle_new_chat_creation()
        handle_chat_switching()
        handle_chat_deletion()
        get_context_for_llm()
        handle_message_with_search()

        print("\n" + "="*60)
        print("‚úÖ –í–°–ï –ü–†–ò–ú–ï–†–´ –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û")
        print("="*60 + "\n")

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}\n")
        import traceback
        traceback.print_exc()
